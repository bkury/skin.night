<?xml version="1.0" encoding="UTF-8"?>
<includes>

<include name="Viewmode_Navigation">
	<defaultcontrol>100</defaultcontrol>
	<allowoverlay>yes</allowoverlay>
	<onload>Skin.SetString(selector1,$INFO[Container.ViewMode])</onload>
	<onunload>Skin.Reset(selector1)</onunload>
	<onunload>Skin.Reset(selector2)</onunload>
	<!-- OpenWeatherMap Widget -->
	<onload condition="Skin.HasSetting(Weather_Widget) + !Skin.HasSetting(Weather_Update)">Skin.SetBool(Weather_Update)</onload>
	<onload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">Skin.Reset(Weather_Update)</onload>
        <onload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">ActivateWindow(home)</onload>
	<onunload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">Skin.SetString(Weather_Location,$INFO[ListItem(0).Label])</onunload>
	<onunload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">Skin.SetString(Weather_Icon,$INFO[ListItem(0).Icon])</onunload>
	<onunload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">Skin.SetString(Weather_Condition,$INFO[ListItem(1).Label])</onunload>
	<onunload condition="Skin.HasSetting(Weather_Widget) + StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)">Skin.SetString(Weather_Temperature,$INFO[ListItem(2).Label])</onunload>

	<views>100,110,120,200,210,220,300,310,320,400,410,420,500,550</views>
	<include condition="Skin.HasSetting(Deck_NoAnimation)">Animation_CommonFade_600</include>
	<controls>

		<control type="group">
			<!--<visible>!isEmpty(ListItem.Label)</visible>-->
			<animation effect="fade" start="100" end="0" time="0" condition="isEmpty(ListItem.Label)">Conditional</animation>

	   		<!-- Default Background -->
			<control type="group">
				<visible>isEmpty(ListItem.Property(Fanart_Image))</visible>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Default_Opacity))">Default_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Default_Opacity))">Default_Opacity</include>
				<include>Default_Custom</include>
			</control>

			<!-- Fanart Background -->
			<include>Background_Viewtypes</include>

			<!-- Views -->
			<control type="group">
				<include>Viewmode_List</include>        <!-- 100/110/120 -->
				<include>Viewmode_Poster</include>      <!-- 200/210/220 -->
				<include>Viewmode_Panel</include>       <!-- 300/310/320 -->
				<include>Viewmode_Banner</include>      <!-- 400/410/420 -->
				<include>Viewmode_Custom1</include>	<!-- 500 -->
				<include>Viewmode_Infocard</include>
			</control>
			
			<!-- Navigation -->
			<include>viewtype_mode</include>
			<include>viewtype_filter</include>
			<include>viewtype_sort</include>
			<include>viewtype_options</include>
			<include>viewtype_options_edit</include>
			<include>viewtype_navigation</include>

			<!-- Clock / Scroll Letter -->
			<include>viewtype_clock</include>
			<include>viewtype_scrolling</include>

			<!-- Debug -->
			<!--<include>debugInfos</include>-->

			<!-- Mouse Triggers -->
			<control type="button" id="60030">
				<posx>0</posx>
				<posy>0</posy>
				<width>1280</width>
				<height>10</height>
				<onfocus>SetFocus(7001)</onfocus>
				<include>Mouse_Trigger</include>
				<visible>![  ControlGroup(7000).hasFocus | ControlGroup(7001).hasFocus | Control.hasFocus(60031) ]</visible>
			</control>
			<control type="button" id="60040">
				<posx>0</posx>
				<posy>710</posy>
				<width>1280</width>
				<height>10</height>
				<onfocus>SetFocus(7000)</onfocus>
				<include>Mouse_Trigger</include>
				<visible>![ ControlGroup(7000).hasFocus  | ControlGroup(7001).hasFocus | Control.hasFocus(60041) ]</visible>
			</control>

		</control>

		<!-- No Content -->
		<control type="group">
			<visible>isEmpty(ListItem.Label) + Skin.HasSetting(XBMC)</visible>
		</control>

		<!-- No Content -->
		<control type="group">
			<visible>isEmpty(ListItem.Label) + !Skin.HasSetting(XBMC)</visible>
			<include>Animation_CommonFade_600_Delay</include>

			<control type="image">
				<include>background_default</include>
				<texture>no_content_bg.jpg</texture>
				<animation effect="fade" end="80" condition="true">Conditional</animation>
			</control>

			<!-- Image -->
			<control type="image">
				<posx>540</posx>
				<posy>100</posy>
				<height>200</height>
				<width>200</width>
				<texture>no_content.png</texture>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
			<control type="image">
				<posx>540</posx>
				<posy>100</posy>
				<height>200</height>
				<width>200</width>
				<texture>no_content.png</texture>
				<include>Animation_OSD</include>
				<colordiffuse>mainblue</colordiffuse>
			</control>

			<!-- Label -->
			<control type="label">
				<posx>0</posx>
				<posy>320</posy>
				<width>1280</width>
				<align>center</align>
				<label>No Content</label>
				<font>Font_Bartowski_MainMenu_Focus</font>
				<textcolor>FFCCCCCC</textcolor>
			</control>

		</control>

		<!-- OpenWeatherMap -->
		<control type="image">
			<include>background_default</include>
			<texture>nav_black.png</texture>
			<visible>StringCompare(Container.SecondTitle,OpenWeatherMapUpdate)</visible>
		</control>

	</controls>
</include>

<include name="Viewmode_Visible_Unknown">
	<visible>Container.Content(files)</visible>
</include>

<include name="Viewmode_Visible_Cover">
	<visible>Container.Content(movies) | Container.Content(homemovies) | Container.Content(seasons) | Container.Content(tvshows)</visible>
</include>

<include name="Viewmode_Visible_Thumb">
	<visible>Container.Content(episodes) | Container.Content(clips) | Container.Content(clip) | ListItem.Type(clip) | ListItem.Type(clips)</visible>
</include>

<include name="Viewmode_Visible_Square">
	<visible>Container.Content(channel) + !ListItem.Type(clip) | Container.Content(channels) + !ListItem.Type(clip) | Container.Content(photoAlbums) | Container.Content(photos) | Container.Content(albums) | Container.Content(Songs) | Container.Content(Artists) | StringCompare(Window.Property(xmlfile),MySharedContent.xml) | Container.Content(addons) | Window.isVisible(1)</visible>
</include>

<include name="Viewmode_Visible_Mirror">
	<visible>[ StringCompare(Container.Viewmode,Poster #1) + Skin.HasSetting(Poster1_Images_Mirror) ] | 
		 [ StringCompare(Container.Viewmode,Poster #2) + Skin.HasSetting(Poster2_Images_Mirror) ] |
		 [ StringCompare(Container.Viewmode,Poster #3) + Skin.HasSetting(Poster3_Images_Mirror) ]
	</visible>
</include>

<!-- Sidebar -->
<include name="Viewmode_Infocard">

	<!-- Viewmode List #1 (100/Info) -->
	<control type="group">
		<visible>Control.isVisible(100)</visible>

		<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(List1_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(List1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(List1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(List1_Sidebar_Right)">WindowClose</animation>
		<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(List1_Sidebar_Right)">WindowClose</animation>

		<animation effect="slide" end="860,0" time="0" tween="cubic" easing="inout" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(List1_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(List1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" start="500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(List1_Sidebar_Right)">WindowOpen</animation>

		<!-- Background -->
		<control type="image">
			<posx>0</posx>
			<posy>-10</posy>
			<width>420</width>
			<height>740</height>
			<texture background="true" border="5">base-rounded.png</texture>
			<colordiffuse>99000000</colordiffuse>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>-10</posy>
			<width>1</width>
			<height>740</height>
			<texture background="true" border="0">base-rounded.png</texture>
			<colordiffuse>99444444</colordiffuse>
			<animation effect="slide" end="-420,0" condition="Skin.HasSetting(List1_Sidebar_Right)">Conditional</animation>
		</control>

		<!-- Sidebar -->
		<control type="group">
			<posy>0</posy>
			<posx>20</posx>
			<include>Viewmode_Sidebar_Header</include>
			<include>Viewmode_Sidebar_Content</include>
			<include>Viewmode_Sidebar_ImagePlot</include>
		</control>
		
		<!-- Clock -->
		<control type="group">
			<visible>!Skin.HasSetting(List1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Left</include>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(List1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Right</include>
		</control>

	</control>

	<!-- Viewmode List #3 (120/Low) -->
	<control type="group">
		<visible>Control.isVisible(120)</visible>

		<!-- Sidebar -->
		<control type="group">
			<animation effect="slide" end="-870" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(List3_Sidebar_Right)">Conditional</animation>

			<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(List3_Sidebar_Right)">WindowOpen</animation>
			<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(List3_Sidebar_Right)">WindowClose</animation>
			<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="Skin.HasSetting(List3_Sidebar_Right)">WindowOpen</animation>
			<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="Skin.HasSetting(List3_Sidebar_Right)">WindowClose</animation>

			<posy>445</posy>
			<posx>880</posx>
			<include>Viewmode_Sidebar_Content</include>
			<include>Viewmode_Sidebar_Plot</include>
		</control>

		<!-- Horizontal Info -->
		<control type="group">
			<posy>10</posy>
			<posx>20</posx>
			<include>Animation_Preplay_Up</include>
			<include>Viewmode_Horizontal_Info</include>
		</control>
		
	</control>

	<!-- Viewmode Poster #1 (200/Info)  -->
	<control type="group">
		<visible>Control.isVisible(200)</visible>

		<!-- Horizontal Info -->
		<control type="group">
			<posx>20</posx>
			<posy>20</posy>
			<include>Animation_Preplay_Up</include>
			<include>Viewmode_Horizontal_Info</include>
		</control>

		<!-- Sidebar -->
		<control type="group">
			<posy>450</posy>
			<posx>20</posx>
			<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">Conditional</animation>
			<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>
			<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Poster1_Sidebar_Right)">WindowClose</animation>
			<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>
			<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">WindowClose</animation>

			<animation effect="slide" end="860,0" time="0" tween="cubic" easing="inout" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">Conditional</animation>
			<animation effect="slide" start="-500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>
			<animation effect="slide" start="500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>

			<include>Viewmode_Sidebar_Content</include>
			<include>Viewmode_Sidebar_Plot</include>
		</control>
		
	</control>

	<!-- Viewmode Poster #2 (Full) -->
	<control type="group">
		<visible>Control.isVisible(210)</visible>
		<!--<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(Poster2_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Poster2_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Poster2_Sidebar_Right)">WindowClose</animation>
		<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="Skin.HasSetting(Poster2_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="Skin.HasSetting(Poster2_Sidebar_Right)">WindowClose</animation>-->

		<!-- Horizontal Info -->
		<control type="group">
			<posx>20</posx>
			<posy>0</posy>
			<include>Animation_Preplay_Up</include>
			<include>Viewmode_Horizontal_Info</include>
		</control>
		<control type="group">
			<posx>20</posx>
			<posy>150</posy>
			<include>Animation_Preplay_Up</include>
			<include>Viewmode_Horizontal_Info_More</include>
		</control>
		
	</control>

	<!-- Viewmode Poster #3 (Deck) -->
	<control type="group">
		<visible>Control.isVisible(220)</visible>

		<!-- Horizontal Info -->
		<control type="group">
			<posx>20</posx>
			<posy>100</posy>
			<animation effect="slide" end="0,30" condition="Skin.HasSetting(Poster3_Images_Small)">Conditional</animation>
			<animation effect="slide" end="0,-30" condition="Skin.HasSetting(Poster3_Images_Large)">Conditional</animation>
			<animation effect="slide" end="0,-100" condition="Skin.HasSetting(Poster3_Images_xLarge)">Conditional</animation>
			<include>Animation_Preplay_Up</include>
			<include>Viewmode_Horizontal_Info</include>
		</control>
		<control type="group">
			<posx>20</posx>
			<posy>490</posy>
			<animation effect="slide" end="0,-30" condition="Skin.HasSetting(Poster3_Images_Small)">Conditional</animation>
			<animation effect="slide" end="0,30" condition="Skin.HasSetting(Poster3_Images_Large)">Conditional</animation>
			<animation effect="slide" end="0,100" condition="Skin.HasSetting(Poster3_Images_xLarge)">Conditional</animation>
			<include>Animation_Preplay_Down</include>
			<include>Viewmode_Horizontal_Info_More</include>
		</control>
		
	</control>

	<!-- Viewmode Panel #1 (300/Info) -->
	<control type="group">
		<visible>Control.isVisible(300)</visible>
		<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Panel1_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Panel1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Panel1_Sidebar_Right)">WindowClose</animation>
		<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Panel1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Panel1_Sidebar_Right)">WindowClose</animation>

		<animation effect="slide" end="860,0" time="0" tween="cubic" easing="inout" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" start="500" time="0" tween="cubic" easing="out" condition="Skin.HasSetting(Deck_NoAnimation) + Skin.HasSetting(Poster1_Sidebar_Right)">WindowOpen</animation>

		<!-- Background -->
		<control type="image">
			<posx>0</posx>
			<posy>-10</posy>
			<width>420</width>
			<height>740</height>
			<texture border="5">base-rounded.png</texture>
			<colordiffuse>99000000</colordiffuse>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>-10</posy>
			<width>1</width>
			<height>740</height>
			<texture border="0">base-rounded.png</texture>
			<colordiffuse>99444444</colordiffuse>
			<animation effect="slide" end="-420,0" condition="Skin.HasSetting(Panel1_Sidebar_Right)">Conditional</animation>
		</control>

		<!-- Sidebar -->
		<control type="group">
			<posy>0</posy>
			<posx>20</posx>
			<include>Viewmode_Sidebar_Header</include>
			<include>Viewmode_Sidebar_Content</include>
			<include>Viewmode_Sidebar_ImagePlot</include>
		</control>

		<!-- Clock -->
		<control type="group">
			<visible>!Skin.HasSetting(Panel1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Left</include>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(Panel1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Right</include>
		</control>
	</control>

	<!-- Viewmode Panel#3 (320/Deck) -->
	<control type="group">
		<visible>Control.isVisible(320)</visible>
		<!--<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(Poster3_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Poster3_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Poster3_Sidebar_Right)">WindowClose</animation>
		<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="Skin.HasSetting(Poster3_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="Skin.HasSetting(Poster3_Sidebar_Right)">WindowClose</animation>-->

		<!-- Horizontal Info -->
		<control type="group">
			<include>Animation_Preplay_Up</include>
			<posx>20</posx>
			<posy>5</posy>
			<include>Viewmode_Horizontal_Info</include>
		</control>
		<control type="group">
			<include>Animation_Preplay_Down</include>
			<posx>20</posx>
			<posy>590</posy>
			<include>Viewmode_Horizontal_Info_More</include>
		</control>
	</control>


	<!-- Viewmode Banner #1 (400/Info) -->
	<control type="group">
		<visible>Control.isVisible(400)</visible>
		<animation effect="slide" end="860,0" time="800" tween="cubic" easing="inout" condition="Skin.HasSetting(Banner1_Sidebar_Right)">Conditional</animation>
		<animation effect="slide" start="-500" time="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Banner1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="-500" time="400" tween="cubic" easing="in" condition="!Skin.HasSetting(Banner1_Sidebar_Right)">WindowClose</animation>
		<animation effect="slide" start="500" time="400" tween="cubic" easing="out" condition="Skin.HasSetting(Banner1_Sidebar_Right)">WindowOpen</animation>
		<animation effect="slide" end="500" time="400" tween="cubic" easing="in" condition="Skin.HasSetting(Banner1_Sidebar_Right)">WindowClose</animation>

		<!-- Background -->
		<control type="image">
			<posx>0</posx>
			<posy>-10</posy>
			<width>420</width>
			<height>740</height>
			<texture border="5">base-rounded.png</texture>
			<colordiffuse>99000000</colordiffuse>
		</control>
		<control type="image">
			<posx>420</posx>
			<posy>-10</posy>
			<width>1</width>
			<height>740</height>
			<texture border="0">base-rounded.png</texture>
			<colordiffuse>99444444</colordiffuse>
			<animation effect="slide" end="-420,0" condition="Skin.HasSetting(Banner1_Sidebar_Right)">Conditional</animation>
		</control>

		<!-- Sidebar -->
		<control type="group">
			<posy>0</posy>
			<posx>20</posx>
			<include>Viewmode_Sidebar_Header</include>
			<include>Viewmode_Sidebar_Content</include>
			<include>Viewmode_Sidebar_ImagePlot</include>
		</control>

		<!-- Clock -->
		<control type="group">
			<visible>!Skin.HasSetting(Banner1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Left</include>
		</control>
		<control type="group">
			<visible>Skin.HasSetting(Banner1_Sidebar_Right)</visible>
			<include>Viewmode_Sidebar_Clock_Right</include>
		</control>
	</control>

	<!-- Viewmode Banner #3 (420/Deck) -->
	<control type="group">
		<visible>Control.isVisible(420)</visible>

		<!-- Horizontal Info -->
		<control type="group">
			<include>Animation_Preplay_Up</include>
                        <animation effect="zoom" end="90" condition="true">Conditional</animation>

			<posx>20</posx>
			<posy>5</posy>
			<include>Viewmode_Horizontal_Info</include>
		</control>
		<control type="group">
			<include>Animation_Preplay_Down</include>
			<posx>20</posx>
			<posy>590</posy>
			<include>Viewmode_Horizontal_Info_More</include>
		</control>
		
	</control>

</include>

<!-- Sidebar Header -->
<include name="Viewmode_Sidebar_Header">
		<control type="group">

			<!-- Header  -->
			<control type="group">

				<!-- 1st Label -->
				<control type="label">
					<posx>0</posx>
					<posy>20</posy><!-- 14 -->
					<label>$VAR[Var_Info_Title]</label>
		                        <font>Font_Bartowski_Main_Preplay</font>
		                        <textcolor>mainblue</textcolor>
		                        <width>390</width>
					<height>46</height>
					<align>left</align>
					<wrapmultiline>false</wrapmultiline>
					<scroll>true</scroll>
		                </control>

				<!-- 2nd Label -->
				<control type="label">
					<posy>55</posy>
					<width>390</width>
					<align>left</align>
					<label>$VAR[Var_Info_Sidebar_3]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFCCCCCC</textcolor>
					<wrapmultiline>false</wrapmultiline>
					<animation type="Conditional" reversible="false" condition="Container.Content(episodes)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="0" />
						<effect type="fade" start="100" end="0" time="500" delay="7000" />
						<effect type="fade" start="100" end="0" time="500" delay="14000" />
					</animation>
				</control>

				<!-- 2nd Label -->
				<control type="label">
					<posy>55</posy>
		                        <width>390</width>
					<align>left</align>
					<label>$VAR[Var_Info_Sidebar_1]</label>
		                        <font>Font_Bartowski_Movies_Plot</font>
		                        <textcolor>FFCCCCCC</textcolor>
					<wrapmultiline>false</wrapmultiline>
					<animation type="Conditional" reversible="false" condition="Container.Content(episodes)" loop="true">
						<effect type="fade" start="0" end="100" time="500" delay="7500" />
						<effect type="fade" start="100" end="0" time="500" delay="14000" />
					</animation>
					<visible>Container.Content(episodes)</visible>
		                </control>

			</control>
		</control>
</include>

<include name="Viewmode_Sidebar_Content">

		<!-- Content -->
		<control type="group">
			<posy>-20</posy>
			<visible>![ Window.isVisible(1) | Container.Content(seasons) | Container.Content(artists) | Container.Content(channel) + !ListItem.Type(clip)]</visible>

			<!-- Background Grid -->
			<control type="image">
				<posy>105</posy>
				<width>510</width>
				<height>190</height>
				<texture background="true">preplay_info.png</texture>
				<colordiffuse>88FFFFFF</colordiffuse>
			</control>
    
			<!-- Section 2 -->
			<control type="group">
				<!-- Duration -->
				<control type="label">
					<posx>0</posx>
					<posy>118</posy>
					<width>140</width>
					<label>$VAR[Var_Info_Duration]</label>
					<font>Font_Bartowski_Main_Preplay</font>
					<textcolor>FFCCCCCC</textcolor>
					<align>center</align>
				</control>
				<!-- Year -->
				<control type="label">
					<posx>130</posx>
					<posy>118</posy>
					<width>120</width>
					<align>center</align>
					<label>$VAR[Var_Info_Year]</label>
					<font>Font_Bartowski_Main_Preplay</font>
					<textcolor>FFCCCCCC</textcolor>
				</control>
				<!-- Star Rating -->
				<control type="image">
					<posx>250</posx>
					<posy>134</posy>
					<description>Rating</description>
					<width>110</width>
					<height>25</height>
					<colordiffuse>mainblue</colordiffuse>
					<texture>$VAR[Var_Info_StarRating]</texture>
					<animation effect="slide" end="0,-10" condition="isEmpty(Control.GetLabel(91000))">Conditional</animation>
				</control>
				<!-- Rating -->
				<control type="label" id="91000">
					<posx>250</posx>
					<posy>116</posy>
					<width>110</width>
					<height>30</height>
					<align>center</align>
					<label>$VAR[Var_Info_Rating]</label>
					<font>Font_Bartowski_Preplay</font>
					<textcolor>FFCCCCCC</textcolor>
					<wrapmultiline>false</wrapmultiline>
				</control>
			</control>	

			<!-- Section 3 -->
			<control type="group">

				<!-- Line 1 -->
				<control type="label">
					<posx>0</posx>
					<posy>168</posy>
					<width>90</width>
					<label>$VAR[Var_Text_Sidebar_Line_1]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFAAAAAA</textcolor>
				</control>
				<control type="label">
					<posx>100</posx>
					<posy>168</posy>
					<width>280</width>
					<label>$VAR[Var_Info_Sidebar_Line_1]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFCCCCCC</textcolor>
				</control>

				<!-- Line 2 -->
				<control type="label">
					<posx>0</posx>
					<posy>199</posy>
					<width>90</width>
					<label>$VAR[Var_Text_Sidebar_Line_2]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFAAAAAA</textcolor>
				</control>
				<control type="label">
					<posx>100</posx>
					<posy>199</posy>
					<width>280</width>
					<label>$VAR[Var_Info_Sidebar_Line_2]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFCCCCCC</textcolor>
				</control>

				<!-- Line 3 -->
				<control type="label">
					<posy>230</posy>
					<label>$VAR[Var_Text_Sidebar_Line_3]</label>
					<width>90</width>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFAAAAAA</textcolor>
				</control>
				<control type="label">
					<posx>100</posx>
					<posy>230</posy>
					<width>280</width>
					<height>30</height>
					<label>$VAR[Var_Info_Sidebar_Line_3]</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FFCCCCCC</textcolor>
				</control>

			</control>

		</control>
</include>

<include name="Viewmode_Sidebar_ImagePlot">
	<control type="group">
		<posy>-10</posy>
		<animation effect="slide" end="0,-160" condition="Window.isVisible(1) | Container.Content(seasons) | Container.Content(artists) | Container.Content(channel) + !ListItem.Type(clip)">Conditional</animation>

		<!-- Mediaflags -->
		<control type="grouplist">
			<description>Plex Media Flags</description>
			<posx>0</posx>
			<posy>270</posy>
			<width>380</width>
			<align>center</align>
			<itemgap>24</itemgap>
			<orientation>horizontal</orientation>
			<include>Viewmode_Mediaflags</include>
			<visible>!Skin.HasSetting(NoMediaFlags)</visible>
		</control>


		<control type="group">
			<include>Viewmode_Visible_Cover</include>

			<!-- TV Shows / Seasons -->
			<control type="group">
				<visible>![Container.Content(movies) | Container.Content(homemovies)]</visible>

				<animation effect="slide" end="95" condition="Skin.HasSetting(NoContentRating) + Skin.HasSetting(NoStudioLogo)">Conditional</animation>
				<control type="image">
					<posx>10</posx>
					<posy>275</posy>
					<width>150</width>
					<height>220</height>
					<texture background="true">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordertexture>confluence/button-nofocus.png</bordertexture>
					<bordersize>1</bordersize>
				</control>
			</control>

			<!-- Movies -->
			<control type="group">
				<visible>Container.Content(movies) | Container.Content(homemovies)</visible>
				<animation effect="slide" end="95" condition="Skin.HasSetting(NoContentRating) + Skin.HasSetting(NoStudioLogo)">Conditional</animation>
				<control type="image">
					<posx>20</posx>
					<posy>300</posy>	
					<width>140</width>
					<height>200</height>
					<texture background="true" diffuse="postermatteNF.png">$INFO[ListItem.Icon]</texture>
					<aspectratio scalediffuse="false">scale</aspectratio>
					<bordertexture>confluence/button-nofocus.png</bordertexture>
					<bordersize>1</bordersize>
				</control>
			</control>

			<!-- Content Rating -->
			<control type="label">
				<posx>180</posx>
				<posy>310</posy>
				<width>210</width>
				<height>40</height>
				<label>31047</label><!-- Content Rating -->
				<font>Font_Bartowski_Movies_Plot</font>
				<textcolor>FF888888</textcolor>
				<align>left</align>
				<visible>!Skin.HasSetting(NoContentRating)</visible>
			</control>
			<control type="label">
				<posx>180</posx>
				<posy>330</posy>
				<width>210</width>
				<height>40</height>
				<label>$VAR[Var_Info_ContentRating]</label>
				<font>Font_Bartowski_Sidebar_Info</font>
				<align>left</align>
				<wrapmultiline>false</wrapmultiline>
				<scroll>true</scroll>
				<textcolor>FFCCCCCC</textcolor>
				<visible>!Skin.HasSetting(NoContentRating)</visible>
			</control>

			<!-- Studio -->
			<control type="group">
				<visible>!Skin.hasSetting(NoStudioLogo) + Skin.HasSetting(StudioLogoImages)</visible>
				<control type="image" id="18000">
					<posx>170</posx>
					<posy>380</posy>
					<width>200</width>
					<height>120</height>
					<texture>$VAR[Var_Info_StudioImage]</texture>
					<aspectratio>scale</aspectratio>
					<colordiffuse>FFCCCCCC</colordiffuse>
				</control>

				<!--<control type="label">
					<posx>180</posx>
					<posy>385</posy>
					<width>210</width>
					<height>40</height>
					<label>31048</label>
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FF888888</textcolor>
					<align>left</align>
					<visible>isEmpty(Control.GetLabel(18000))</visible>
				</control>
				<control type="label">
					<posx>180</posx>
					<posy>405</posy>
					<label>$VAR[Var_Info_Studio]</label>
					<font>Font_Bartowski_Sidebar_Info</font>
					<width>210</width>
					<height>70</height>
					<align>left</align>
					<wrapmultiline>true</wrapmultiline>
					<scroll>false</scroll>
					<textcolor>FFCCCCCC</textcolor>
					<visible>isEmpty(Control.GetLabel(18000))</visible>
				</control>-->
			</control>

			<control type="group">
				<visible>!Skin.hasSetting(NoStudioLogo) + !Skin.HasSetting(StudioLogoImages)</visible>
				<control type="label">
					<posx>180</posx>
					<posy>385</posy>
					<width>210</width>
					<height>40</height>
					<label>31048</label><!-- Studio -->
					<font>Font_Bartowski_Movies_Plot</font>
					<textcolor>FF888888</textcolor>
					<align>left</align>
				</control>
				<control type="label">
					<posx>180</posx>
					<posy>405</posy>
					<label>$VAR[Var_Info_Studio]</label>
					<font>Font_Bartowski_Sidebar_Info</font>
					<width>210</width>
					<height>70</height>
					<align>left</align>
					<wrapmultiline>true</wrapmultiline>
					<scroll>false</scroll>
					<textcolor>FFCCCCCC</textcolor>
				</control>
			</control>

		</control>

		<!-- Unknown -->
		<control type="group">
			<include>Viewmode_Visible_Unknown</include>
			<control type="image">
				<posx>0</posx>
				<posy>300</posy>
				<width>380</width>
				<height>180</height>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio scalediffuse="false">keep</aspectratio>
				<bordertexture>confluence/button-nofocus.png</bordertexture>
				<bordersize>1</bordersize>
			</control>
		</control>

		<!-- Thumb -->
		<control type="group">
			<include>Viewmode_Visible_Thumb</include>
			<control type="image">
				<posx>0</posx>
				<posy>310</posy>
				<width>380</width>
				<height>180</height>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio scalediffuse="false">scale</aspectratio>
				<bordertexture>confluence/button-nofocus.png</bordertexture>
				<bordersize>1</bordersize>
			</control>
		</control>

		<!-- Square -->
		<control type="group">
			<include>Viewmode_Visible_Square</include>
			<control type="image">
				<posx>0</posx>
				<posy>280</posy>
				<width>380</width>
				<height>200</height>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>Container.Content(artists)</visible>
				<bordertexture>confluence/button-nofocus.png</bordertexture>
				<bordersize>1</bordersize>
			</control>
			<control type="image">
				<posx>0</posx>
				<posy>280</posy>
				<width>380</width>
				<height>200</height>
				<texture background="true">$INFO[ListItem.Icon]</texture>
				<aspectratio>keep</aspectratio>
				<visible>!Container.Content(artists)</visible>
				<bordertexture>confluence/button-nofocus.png</bordertexture>
				<bordersize>1</bordersize>
			</control>
		</control>

		<!-- Plot -->
		<control type="textbox">
			<posx>0</posx>
			<posy>510</posy>
			<width>380</width>
			<height>270</height>
			<align>justify</align>
			<label>$VAR[Var_Info_Plot]</label>
			<font>Font_Bartowski_Movies_Plot</font>
			<textcolor>FFCCCCCC</textcolor>
			<autoscroll time="3000" delay="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
			<include>Viewmode_Visible_Plot</include>
			<visible>[Container.Content(seasons) | Container.Content(artists)]</visible>
		</control>
		<control type="textbox">
			<posx>0</posx>
			<posy>510</posy>
			<width>380</width>
			<height>125</height>
			<align>justify</align>
                        <label>$VAR[Var_Info_Plot]</label>
			<font>Font_Bartowski_Movies_Plot</font>
			<textcolor>FFCCCCCC</textcolor>
			<autoscroll time="3000" delay="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
			<include>Viewmode_Visible_Plot</include>
			<visible>![Container.Content(seasons) | Container.Content(artists)]</visible>
		</control>

	</control>
</include>

<include name="Viewmode_Sidebar_Plot">
	<control type="textbox">
		<description>Plot</description>
		<posx>0</posx>
		<posy>-25</posy>
		<width>380</width>
		<height>125</height>
		<align>justify</align>
		<label>$VAR[Var_Info_Plot]</label>
		<font>Font_Bartowski_Movies_Plot</font>
		<textcolor>FFCCCCCC</textcolor>
		<autoscroll time="3000" delay="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
		<visible>!isEmpty(ListItem.Plot)</visible>
		<include>Viewmode_Visible_Plot</include>
	</control>
</include>

<!-- Horizontal Information -->
<include name="Viewmode_Horizontal_Info">
	<control type="group">
		<control type="label">
			<posy>0</posy>
			<height>70</height>
			<width>1000</width>
			<align>left</align>
			<label>$VAR[Viewmode_Horizontal_Info_1]</label>
			<include>Font_Main_Header</include>
			<scroll>false</scroll>
			<textcolor>mainblue</textcolor>
			<wrapmultiline>false</wrapmultiline>
		</control>
		<control type="label">
			<posy>80</posy>
			<height>60</height>
			<width>1000</width>
			<align>left</align>
			<label>$VAR[Viewmode_Horizontal_Info_2]</label>
			<include>Font_Sub_Header</include>
			<scroll>true</scroll>
			<textcolor>white</textcolor>
			<wrapmultiline>false</wrapmultiline>
		</control>
	</control>
</include>
<variable name="Viewmode_Horizontal_Info_1">
	<value condition="ListItem.Type(episode)">$INFO[ListItem.Title]</value>
	<value condition="ListItem.Type(album)">$INFO[ListItem.Artist]</value>
	<value condition="Container.Content(songs)">$INFO[Container.Property(parentTitle)]</value>
	<value>$INFO[ListItem.Label]</value>
</variable>
<variable name="Viewmode_Horizontal_Info_2">
	<value condition="ListItem.Type(episode)">$INFO[ListItem.Date][COLOR=mainblue] / [/COLOR]$INFO[ListItem.Duration]min</value>
	<value condition="ListItem.Type(clip)">$INFO[ListItem.Date][COLOR=mainblue] / [/COLOR]$INFO[ListItem.Duration]min</value>
	<value condition="ListItem.type(movie) | Container.Content(tvshows)">$INFO[ListItem.Year][COLOR=mainblue] / [/COLOR]$INFO[ListItem.Duration]min</value>
	<value condition="ListItem.Type(photo)">$INFO[ListItem.Date]</value>
	<value condition="Container.Content(albums)">$INFO[ListItem.Album]</value>
	<value condition="Container.Content(artists)">$INFO[ListItem.Genre]</value>
	<value condition="Container.Content(songs)">$INFO[ListItem.Label][COLOR=mainblue] / [/COLOR]$INFO[ListItem.Duration]</value>
	<value condition="Container.Content(seasons)">$INFO[Container.SecondTitle]</value>

	<value>$INFO[ListItem.Label]</value>
</variable>


<!-- Viewmode Information MORE -->
<include name="Viewmode_Horizontal_Info_More">
	<control type="group">

		<!-- Content Rating -->
		<control type="image">
			<posx>0</posx>
			<posy>11</posy>
			<width>80</width>
			<height>70</height>
			<aspectratio>keep</aspectratio>
			<colordiffuse>88FFFFFF</colordiffuse>
			<texture>$INFO[ListItem.Art(mediaTag::contentRating)]</texture>
			<align>center</align>
			<aligny>center</aligny>
			<visible>!isEmpty(ListItem.Art(mediaTag::contentRating))</visible>	
			<include>Animation_CommonFade_600</include>
		</control>

		<!-- Star Rating -->
		<control type="image">
			<posy>95</posy>
			<width>80</width>
			<height>20</height>
			<aspectratio>keep</aspectratio>
			<colordiffuse>mainblue</colordiffuse>
			<texture>$INFO[ListItem.StarRating]</texture>
			<align>center</align>
		</control>

		<!-- Plot -->
		<control type="textbox">
                        <posx>90</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <height>90</height>
                        <align>justify</align>
			<label>$VAR[Var_Info_Plot]</label>
                        <font>Font_Bartowski_Movies_Plot</font>
                        <textcolor>ffffffff</textcolor>
                        <autoscroll time="3000" delay="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
			<animation effect="slide" end="-85" tween="quadratic" easing="out" time="400" condition="isEmpty(ListItem.Art(mediaTag::contentRating))">Conditional</animation>
                </control>

		<!-- Mediaflags -->
		<control type="grouplist">
			<posx>100</posx>
			<posy>100</posy>
			<width>600</width>
			<height>20</height>
			<orientation>horizontal</orientation>
			<itemgap>30</itemgap>
			<include>Viewmode_Mediaflags</include>
		</control>

	</control>
</include>

<!-- Mediaflags -->
<variable name="Viewmode_Label_VideoResolution">
        <value>$INFO[Listitem.Art(mediaTag::videoResolution)]</value>
</variable>
<variable name="Viewmode_Label_AudioCodec">
        <value>$INFO[Listitem.Art(mediaTag::audioCodec)]</value>
</variable>
<variable name="Viewmode_Label_AudioChannels">
        <value>$INFO[Listitem.Art(mediaTag::audioChannels)]</value>
</variable>
<variable name="Viewmode_Label_AspectRatio">
        <value>$INFO[Listitem.Art(mediaTag::aspectRatio)]</value>
</variable>
<variable name="Viewmode_Label_VideoCodec">
        <value>$INFO[Listitem.Art(mediaTag::videoCodec)]</value>
</variable>

<!-- Mediaflags -->
<include name="Viewmode_Mediaflags">
	
	<!-- Video Resolution -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::videoResolution)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::videoResolution))</visible>
	</control>
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>mediaflags/resolution/$INFO[Listitem.Property(VideoResolution)].png</texture>
		<aspectratio>keep</aspectratio>
		<visible>Skin.HasSetting(XBMC) + !isEmpty(Listitem.Property(VideoResolution))</visible>
	</control>

	<!-- Video Codec -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::videoCodec)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::videoCodec))</visible>
	</control>
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>mediaflags/resolution/$INFO[Listitem.Property(VideoCodec)].png</texture>
		<aspectratio>keep</aspectratio>
		<visible>Skin.HasSetting(XBMC) + !isEmpty(Listitem.Property(VideoCodec))</visible>
	</control>

	<!-- Audio Codec -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::audioCodec)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::audioCodec))</visible>
	</control>
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>mediaflags/resolution/$INFO[Listitem.Property(AudioCodec)].png</texture>
		<aspectratio>keep</aspectratio>
		<visible>Skin.HasSetting(XBMC) + !isEmpty(Listitem.Property(AudioCodec))</visible>
	</control>

	<!-- Audio Channels -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::audioChannels)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::audioChannels))</visible>
	</control>
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>mediaflags/resolution/$INFO[Listitem.Property(AudioChannels)].png</texture>
		<aspectratio>keep</aspectratio>
		<visible>Skin.HasSetting(XBMC) + !isEmpty(Listitem.Property(AudioChannels))</visible>
	</control>

	<!-- Aspect Ratio -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::aspectRatio)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::aspectRatio))</visible>
	</control>
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>mediaflags/resolution/$INFO[Listitem.Property(VideoAspect)].png</texture>
		<aspectratio>keep</aspectratio>
		<visible>Skin.HasSetting(XBMC) + !isEmpty(Listitem.Property(VideoAspect))</visible>
	</control>

	<!-- Frame Rate -->
	<control type="image">
		<height>17</height>
		<width min="1" max="95">auto</width>
		<texture>$INFO[Listitem.Art(mediaTag::videoFrameRate)]</texture>
		<aspectratio>keep</aspectratio>
		<visible>!Skin.HasSetting(XBMC) + !isEmpty(Listitem.Art(mediaTag::videoFrameRate))</visible>
	</control>

</include>


<!-- Autohide -->
<include name="Animation_Infocard_Autohide_Left">
	<animation effect="slide" start="-500" end="0" time="600" delay="3000" tween="quadratic" easing="out" condition="![Container.OnNext | Container.OnPrevious]">Conditional</animation>
	<!--<animation effect="slide" end="-500" time="600" tween="quadratic" easing="out" condition="![Container.OnNext | Container.OnPrevious]">Conditional</animation>-->
	<!--<animation effect="slide" end="500" time="2000" delay="1000" tween="quadratic" easing="out" condition="Container.OnNext | Container.OnPrevious">Conditional</animation>
	<animation effect="slide" start="-500" end="0" time="600" delay="500" tween="quadratic" easing="out" condition="![Container.OnNext | Container.OnPrevious]">Conditional</animation>-->
</include>
<include name="Animation_Infocard_Autohide_Right">
	<animation effect="slide" start="500" end="0" time="600" delay="3000" tween="quadratic" easing="out" condition="![Container.OnNext | Container.OnPrevious]">Conditional</animation>
</include>
<include name="Animation_Infocard_Autohide_Center">
	<animation effect="fade" start="0" end="100" time="600" condition="![Container.OnNext | Container.OnPrevious]">Conditional</animation>
</include>

<!-- Viewtype Option Normal/Transparent -->
<include name="Viewmode_Layout_Image_Transparent">
	<animation effect="fade" start="100" end="20" time="400" delay="0" condition="[ Container.Content(movies) | Container.Content(episodes) ] + StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
	<animation effect="fade" start="100" end="20" time="400" delay="0" condition="[ Container.Content(tvshows) | Container.Content(seasons) ] + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)">Conditional</animation>
</include>
<include name="Viewmode_Layout_Image_TransparentFocus">
	<animation effect="fade" start="20" end="40" time="0" delay="0" condition="[ Container.Content(movies) | Container.Content(episodes) ] + StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
	<animation effect="fade" start="20" end="40" time="0" delay="0" condition="[ Container.Content(tvshows) | Container.Content(seasons) ] + !IntegerGreaterThan(ListItem.Property(UnWatchedEpisodes),0)">Conditional</animation>
</include>

<!-- Viewmode List Overlay -->                                
<include name="Viewmode_List_Overlay">
	<animation effect="slide" end="40" time="0" condition="Container.Content(movies) | Container.Content(tvshows) | Container.Content(seasons) | Container.Content(episodes) | Container.Content(homemovies)">Conditional</animation>
</include>

<!-- Viewmode Focus -->
<include name="Viewmode_Focus">
        <animation type="Focus" reversible="false">
                <effect type="zoom" center="auto" end="120" time="300" tween="back" easing="out" loop="true" />
        </animation>
</include>

<!-- Focusposition -->
<include name="Viewmode_FocusPosition_0">
	<focusposition>0</focusposition>
</include>
<include name="Viewmode_FocusPosition_1">
	<focusposition>1</focusposition>
</include>
<include name="Viewmode_FocusPosition_2">
	<focusposition>2</focusposition>
</include>
<include name="Viewmode_FocusPosition_3">
	<focusposition>3</focusposition>
</include>
<include name="Viewmode_FocusPosition_4">
	<focusposition>4</focusposition>
</include>
<include name="Viewmode_FocusPosition_5">
	<focusposition>5</focusposition>
</include>

<!-- Custom Viewmode Default -->
<include name="Custom_Viewmode_Default">
	<posx>20</posx>
	<posy>20</posy>
	<width>600</width>
	<height>300</height>
	<focusposition>0</focusposition>
	<movement>0</movement>
</include>

<!-- Viewmode Border Colour -->
<include name="Viewmode_Border_NoColor">
	<bordertexture>confluence/button-nofocus.png</bordertexture>
	<bordersize>2</bordersize>
</include>

<include name="Viewmode_Border_Color">
	<include condition="StringCompare(Skin.CurrentColourTheme,Amber.xml)">Viewmode_Border_Color_Amber</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Brown.xml)">Viewmode_Border_Color_Brown</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Cobalt.xml)">Viewmode_Border_Color_Cobalt</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Crimson.xml)">Viewmode_Border_Color_Crimson</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Emerald.xml)">Viewmode_Border_Color_Emerald</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Green.xml)">Viewmode_Border_Color_Green</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Indigo.xml)">Viewmode_Border_Color_Indigo</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,LightBlue.xml)">Viewmode_Border_Color_LightBlue</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Lime.xml)">Viewmode_Border_Color_Lime</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Magenta.xml)">Viewmode_Border_Color_Magenta</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Mauve.xml)">Viewmode_Border_Color_Mauve</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Olive.xml)">Viewmode_Border_Color_Olive</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Orange.xml)">Viewmode_Border_Color_Orange</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Pink.xml)">Viewmode_Border_Color_Pink</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Red.xml)">Viewmode_Border_Color_Red</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Sienna.xml)">Viewmode_Border_Color_Sienna</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Steel.xml)">Viewmode_Border_Color_Steel</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Teal.xml)">Viewmode_Border_Color_Teal</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Violet.xml)">Viewmode_Border_Color_Violet</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,White.xml)">Viewmode_Border_Color_White</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,Yellow.xml)">Viewmode_Border_Color_Yellow</include>
	<include condition="StringCompare(Skin.CurrentColourTheme,SKINDEFAULT)">Viewmode_Border_Color_Default</include>
</include>

<include name="Viewmode_Border_Color_Default">
	<bordertexture>border/border_default.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Amber">
	<bordertexture>border/border_amber.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Brown">
	<bordertexture>border/border_brown.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Cobalt">
	<bordertexture>border/border_cobalt.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Crimson">
	<bordertexture>border/border_crimson.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Emerald">
	<bordertexture>border/border_emerald.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Green">
	<bordertexture>border/border_green.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Indigo">
	<bordertexture>border/border_indigo.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_LightBlue">
	<bordertexture>border/border_lightblue.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Lime">
	<bordertexture>border/border_lime.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Magenta">
	<bordertexture>border/border_magenta.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Mauve">
	<bordertexture>border/border_mauve.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Olive">
	<bordertexture>border/border_olive.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Orange">
	<bordertexture>border/border_orange.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Pink">
	<bordertexture>border/border_pink.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Red">
	<bordertexture>border/border_red.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Sienna">
	<bordertexture>border/border_sienna.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Steel">
	<bordertexture>border/border_steel.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Teal">
	<bordertexture>border/border_teal.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Violet">
	<bordertexture>border/border_violet.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_White">
	<bordertexture>border/border_white.png</bordertexture>
</include>
<include name="Viewmode_Border_Color_Yellow">
	<bordertexture>border/border_yellow.png</bordertexture>
</include>

<include name="WatchedOpacityNF0">
	<animation effect="fade" start="100" end="0" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF10">
	<animation effect="fade" start="100" end="10" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF20">
	<animation effect="fade" start="100" end="20" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF30">
	<animation effect="fade" start="100" end="30" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF40">
	<animation effect="fade" start="100" end="40" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF50">
	<animation effect="fade" start="100" end="50" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF60">
	<animation effect="fade" start="100" end="60" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF70">
	<animation effect="fade" start="100" end="70" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF80">
	<animation effect="fade" start="100" end="80" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>
<include name="WatchedOpacityNF90">
	<animation effect="fade" start="100" end="90" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Conditional</animation>
</include>

<include name="WatchedOpacityF0">
	<animation effect="fade" start="0" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF10">
	<animation effect="fade" start="10" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF20">
	<animation effect="fade" start="20" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF30">
	<animation effect="fade" start="30" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF40">
	<animation effect="fade" start="40" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF50">
	<animation effect="fade" start="50" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF60">
	<animation effect="fade" start="60" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF70">
	<animation effect="fade" start="70" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF80">
	<animation effect="fade" start="80" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>
<include name="WatchedOpacityF90">
	<animation effect="fade" start="90" end="100" time="600" delay="1500" condition="StringCompare(ListItem.Overlay,OverlayWatched.png)">Focus</animation>
</include>

<include name="FocusEffectZoom">
	<animation effect="zoom" reversible="false" center="auto" start="100" end="110" time="400" tween="back" easing="out">Focus</animation>
</include>

<include name="FocusEffectDrop">
	<animation effect="zoom" reversible="false" center="auto" start="400" end="100" time="800" tween="cubic" easing="out">Focus</animation>
</include>


</includes>
