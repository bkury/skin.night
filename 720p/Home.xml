<?xml version="1.0"?>
<window id="0">
	<defaultcontrol always="true">301</defaultcontrol>
	<allowoverlay>yes</allowoverlay>
	<onload>Skin.Reset(mysharedcontent_helper)</onload>
	<controls>

	<!-- PHT NoFocus Bug Workaround -->
	<control type="button" id="301">
		<posx>-10</posx>
		<posy>-10</posy>
		<width>0</width>
		<height>0</height>
		<texturenofocus>-</texturenofocus>
		<texturefocus>-</texturefocus>
		<onfocus>SetFocus(300)</onfocus>
	</control>

	<!-- Background Stuff -->
	<control type="group">

		<!-- Plex General Fanart -->
		<control type="group">
			<visible>Control.IsVisible(300) | Control.IsVisible(1400)</visible>
			<visible>![ControlGroup(5000).HasFocus | ControlGroup(7001).HasFocus | ControlGroup(7002).HasFocus | ControlGroup(7003).HasFocus | ControlGroup(7004).HasFocus | ControlGroup(7005).HasFocus]</visible>
			<visible>![Container(300).HasFocus(20) | Container(300).HasFocus(21) | Container(300).HasFocus(22) | Container(300).HasFocus(23) | Container(300).HasFocus(24) | Container(300).HasFocus(25) | Container(300).HasFocus(26) | Container(300).HasFocus(27) | Container(300).HasFocus(28) | Container(300).HasFocus(29) | Container(300).HasFocus(30)]</visible>
			<visible>![Container(300).HasFocus(11) + [!isEmpty(Skin.String(Search_Single)) | !isEmpty(Skin.String(Search_Multi))]]</visible>
			<control type="multiimage" id="10101">
				<include>background_default</include>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Home_Opacity))">Home_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Home_Opacity))">Home_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Home_Kenburns)">background_kenburns</include>
				<visible>![!isEmpty(Skin.String(Home_Single)) | !isEmpty(Skin.String(Home_Multi))]</visible>
			</control>

			<!-- Home Custom -->
			<include>Home_Custom</include>	                   
		</control>

		<!-- Deck Fanart -->
		<control type="group">
			<visible>![!isEmpty(Skin.String(Deck_Single)) | !isEmpty(Skin.String(Deck_Multi))]</visible>
			<!-- Recently Added Fanart -->
			<control type="multiimage">
                                <visible>ControlGroup(7000).HasFocus</visible>
                                <info background="true">Container(11000).ListItem.Art(fanart)</info>
                                <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
                                <posx>0</posx>
                                <posy>0</posy>
                                <width>1280</width>
                                <height>720</height>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
			<!-- On Deck Fanart -->
                        <control type="multiimage">
                                <visible>ControlGroup(7001).HasFocus</visible>
                                <info background="true">Container(11001).ListItem.Art(fanart)</info>
                                <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
                                <posx>0</posx>
                                <posy>0</posy>
                                <width>1280</width>
                                <height>720</height>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
			<!-- Recently Used -->
                        <control type="multiimage">
                                <visible>ControlGroup(7002).HasFocus</visible>
                                <info background="true">Container(11002).ListItem.Art(fanart)</info>
                                <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
                                <posx>0</posx>
                                <posy>0</posy>
                                <width>1280</width>
                                <height>720</height>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
			<!-- QUEUE & RECOMMANDATIONS (HACK)-->
                        <control type="multiimage">
                                <visible>ControlGroup(7003).HasFocus</visible>
                                <info background="true">Container(11003).ListItem.Art(thumb)</info>
                                <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
                                <posx>0</posx>
                                <posy>0</posy>
                                <width>1280</width>
                                <height>720</height>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
                        <control type="multiimage">
                                <visible>ControlGroup(7005).HasFocus</visible>
                                <info background="true">Container(11004).ListItem.Art(thumb)</info>
       	                        <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
                                <posx>0</posx>
                                <posy>0</posy>
                                <width>1280</width>
                                <height>720</height>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
			<!-- Grainy Option -->
			<control type="largeimage">
				<posx>0</posx>
				<posy>0</posy>
	                        <width>1280</width>
	                        <height>720</height>
				<texture>grainy.png</texture>
	                        <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
	                        <aligny>top</aligny>
				<animation effect="fade" start="0" end="100" time="600" delay="0" condition="true">Conditional</animation>
				<animation type="WindowClose">
                       	                <effect type="fade" start="100" end="0" time="600"/>
                               	</animation>
				<visible>Skin.HasSetting(Deck_Grainy)</visible>
			</control>
		</control>

		<!-- Deck Custom Background -->
		<control type="group">
			<visible>[!isEmpty(Skin.String(Deck_Single)) | !isEmpty(Skin.String(Deck_Multi))]</visible>
			<visible>ControlGroup(7001).HasFocus | ControlGroup(7002).HasFocus | ControlGroup(7003).HasFocus | ControlGroup(7004).HasFocus | ControlGroup(7005).HasFocus</visible>
			<include>Deck_Custom</include>
		</control>

		<!-- Search Custom Background -->
		<control type="group">
			<visible>Container(300).hasFocus(11)</visible>	
			<include>Search_Custom</include>
		</control>

		<!-- Home Extentions Background -->
		<include>Home_Extension_Background</include>
	</control>

	<!-- Vertical Home Menu -->
	<control type="group">
		<visible>![Skin.HasSetting(Home_Horizontal) | Skin.HasSetting(Home_Panel)]</visible>
		<!-- Homescreen Background Overlay -->
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<include>Dimensions_Fullscreen</include>
			<texture>mainmenu/vignette.png</texture>
			<colordiffuse>ff15efd9</colordiffuse>
			<include>Animation_CommonFadeNoHide</include>
			<visible>![ Skin.HasSetting(Home_Horizontal) | Skin.HasSetting(Home_Panel) ]</visible>
		</control>
		<!-- Navigation Arrow (Submenu) -->
		<control type="image">
			<posy>690</posy>
			<posx>15</posx>
			<width>16</width>
			<height>22</height>
			<aspectratio>scale</aspectratio>
			<texture>left-menu-indicator-arrow.png</texture>
			<include condition="!Skin.HasSetting(NoAccentArrow)">NoAccentArrow</include>
			<colordiffuse>50b8b7b7</colordiffuse>
                        <animation effect="slide" end="17" time="300" condition="Window.IsActive(4998)">conditional</animation>
                        <animation effect="fade" end="0" time="300" reversible="false">hidden</animation>
			<visible>!Skin.HasSetting(HomeArrow) + Window.IsActive(4998)</visible>
			<include>Animation_CommonFade</include>
		</control>
		<control type="image">
			<posy>690</posy>
			<posx>10</posx>
			<width>16</width>
			<height>22</height>
			<aspectratio>scale</aspectratio>
			<texture flipx="true">left-menu-indicator-arrow.png</texture>
			<include condition="!Skin.HasSetting(NoAccentArrow)">NoAccentArrow</include>
			<colordiffuse>50b8b7b7</colordiffuse>
			<visible>!Skin.HasSetting(HomeArrow) + !ControlGroup(5000).HasFocus</visible>
			<include>Animation_CommonFade</include>
		</control>
		<control type="image">
			<posy>690</posy>
			<posx>1254</posx>
			<width>16</width>
			<height>22</height>
			<aspectratio>scale</aspectratio>
			<texture>left-menu-indicator-arrow.png</texture>
			<include condition="!Skin.HasSetting(NoAccentArrow)">NoAccentArrow</include>
			<colordiffuse>50b8b7b7</colordiffuse>
			<include>Animation_CommonFade</include>
			<visible>Skin.HasSetting(Deck_Hide) + ![ControlGroup(5000).HasFocus | Window.IsActive(4998)]</visible>
			<include>Animation_CommonFade</include>
		</control>
	</control>

	<control type="group">
		<!-- Show Server Name -->
		<control type="label">		
			<posy>684</posy>
			<posx>35</posx>
			<width>300</width>
			<height>22</height>
			<textcolor>FFCCCCCC</textcolor>
			<label>$INFO[Container(300).ListItem.Label2]</label>
			<visible>Control.hasFocus(300) + Skin.HasSetting(Home_Servername) + ![System.UpdateIsAvailable | Window.IsActive(4998)]</visible>
                        <include>Animation_CommonFade</include>
		</control>
		<!-- Update Available Notification-->
		<control type="label">		
			<posy>684</posy>
			<posx>35</posx>
			<width>300</width>
			<height>22</height>
			<textcolor>white</textcolor>
			<label>$LOCALIZE[31564]</label>
			<animation type="Conditional" reversible="false" condition="true" loop="true">
				<effect type="fade" start="0" end="100" time="2500" delay="0" loop="true" reversible="false" />
				<effect type="fade" start="100" end="0" time="2500" delay="2500" loop="true" reversible="false" />
			</animation>
			<visible>System.UpdateIsAvailable + ![Window.IsActive(4998) | Skin.HasSetting(Home_Update)]</visible>-->
		</control>
		<!-- New Year Notification-->
		<control type="label">		
			<posy>684</posy>
			<posx>55</posx>
			<width>300</width>
			<height>22</height>
			<textcolor>white</textcolor>
			<label>Happy New Year!</label>
			<animation type="Conditional" reversible="false" condition="true" loop="true">
				<effect type="fade" start="0" end="100" time="5000" delay="0" loop="true" reversible="false" />
				<effect type="fade" start="100" end="0" time="5000" delay="5000" loop="true" reversible="false" />
			</animation>
			<visible>SubString(System.Date(ddmm),0101) + ![System.UpdateIsAvailable | Skin.HasSetting(Home_Servername)]</visible>
		</control>
	</control>

	<!-- Home Navigation -->
	<include>Home_Navigation</include>

	<!-- Home Deck -->
	<include>Home_Deck</include>

	<!-- Clock -->
	<include>Global_Time_Home</include>
	<include>Global_Time_Home_Big</include>


	<!-- Now Playing -->
	<control type="group">
		<visible>Player.HasVideo | Player.HasAudio</visible>
		<posx>860</posx>
		<posy>640</posy>

		<control type="image">
			<posx>-280</posx>
			<posy>-100</posy>

			<width>700</width>
			<height>220</height>
			<texture flipy="true">common/library_time_gradient.png</texture>
		</control>

		<include>viewtype_nowplaying_right</include>
	</control>

	</controls>
</window>
