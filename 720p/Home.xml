<?xml version="1.0" encoding="UTF-8"?>
<window id="0">
	<defaultcontrol always="true">299</defaultcontrol>
	<allowoverlay>yes</allowoverlay>
  
	<!-- XBMC OnLoad -->
	<onload condition="Skin.HasSetting(XBMC)">RunScript(script.favourites)</onload>
	<onload condition="Skin.HasSetting(XBMC)">SetProperty(SkinWidgets_RandomItems_Update,true)</onload>
	<onload condition="Skin.HasSetting(XBMC) + System.HasAddon(plugin.video.plexbmc)">RunScript(plugin.video.plexbmc,amberskin,nocat)</onload>

	<include>Animation_CommonFade_600</include>

	<controls>

	<!-- PHT NoFocus Bug Workaround -->
	<control type="button" id="299">
		<posx>-10</posx>
		<posy>-10</posy>
		<width>0</width>
		<height>0</height>
		<texturenofocus>-</texturenofocus>
		<texturefocus>-</texturefocus>
		<onfocus>SetFocus(300)</onfocus>
	</control>

	<!-- Background Stuff -->
		<control type="group">
			<visible>![ControlGroup(5000).HasFocus | ControlGroup(7001).HasFocus | ControlGroup(7002).HasFocus | ControlGroup(7003).HasFocus | ControlGroup(7004).HasFocus | ControlGroup(7005).HasFocus | ControlGroup(7006).HasFocus | ControlGroup(7007).HasFocus | ControlGroup(7008).HasFocus | ControlGroup(7009).HasFocus | ControlGroup(7010).HasFocus ]</visible>
			<visible>![Container(300).HasFocus(15) + [!isEmpty(Skin.String(Search_Single)) | !isEmpty(Skin.String(Search_Multi))] ]</visible>
			<visible>![Container(300).hasFocus(17)]</visible>
			<visible>![Container(300).hasFocus(400) | Container(300).hasFocus(401) | Container(300).hasFocus(402) | Container(300).hasFocus(403) | Container(300).hasFocus(404) | Container(300).hasFocus(405) | Container(300).hasFocus(406) | Container(300).hasFocus(407) | Container(300).hasFocus(408) | Container(300).hasFocus(409) | Container(300).hasFocus(410) | Container(300).hasFocus(411) | Container(300).hasFocus(412) | Container(300).hasFocus(413) | Container(300).hasFocus(414) | Container(300).hasFocus(415) | Container(300).hasFocus(416) | Container(300).hasFocus(417) | Container(300).hasFocus(418) | Container(300).hasFocus(419) ]</visible>
			<visible>![Container(300).HasFocus(350) | Container(300).HasFocus(351) | Container(300).HasFocus(352) | Container(300).HasFocus(353) | Container(300).HasFocus(354) | Container(300).HasFocus(355) | Container(300).HasFocus(356) | Container(300).HasFocus(357) | Container(300).HasFocus(358) | Container(300).HasFocus(359)]</visible>
			<visible>![StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome1.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome2.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome3.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome4.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome5.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome6.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome7.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome8.Label)) | StringCompare(Container(300).ListItem.Label,Skin.String(CustomHome9.Label)) ]</visible>
			<!-- Opacity Option -->
			<include condition="isEmpty(Skin.String(Home_Opacity))">Home_Opacity_Default</include>
			<include condition="!isEmpty(Skin.String(Home_Opacity))">Home_Opacity</include>

			<!-- PLEX Fanart -->
			<control type="multiimage" id="10101">
				<include>background_default</include>
				<texture background="true">-</texture>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Home_Kenburns)">background_kenburns</include>
				<visible>![!isEmpty(Skin.String(Home_Single)) | !isEmpty(Skin.String(Home_Multi))]</visible>
			</control>

			<include>Home_Custom</include>
		</control>


		<!-- Deck Fanart -->
		<control type="group">
			<visible>![!isEmpty(Skin.String(Deck_Single)) | !isEmpty(Skin.String(Deck_Multi))]</visible>
			<!-- Image -->
			<control type="image">
				<include>background_default</include>
				<texture background="true">$VAR[Deck_Background_ControlGroup]</texture>
				<!-- Fadetime Option -->
				<include condition="isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Fadetime))">Deck_Fadetime</include>
				<!-- Time per Image Option -->
				<include condition="isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_TimePerImage))">Deck_TimePerImage</include>
				<!-- Opacity Option -->
				<include condition="isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity_Default</include>
				<include condition="!isEmpty(Skin.String(Deck_Opacity))">Deck_Opacity</include>
				<!-- Kenburns Option -->
				<include condition="Skin.HasSetting(Deck_Kenburns)">background_kenburns</include>
                        </control>
			<!-- Grainy Option -->
			<control type="largeimage">
				<posx>0</posx>
				<posy>0</posy>
	                        <width>1280</width>
	                        <height>720</height>
				<texture background="true">grainy.png</texture>
	                        <aspectratio scalediffuse="false" aligny="top">scale</aspectratio>
	                        <aligny>top</aligny>
				<animation effect="fade" start="0" end="100" time="600" delay="0" condition="true">Conditional</animation>
				<animation type="WindowClose">
                       	                <effect type="fade" start="100" end="0" time="600"/>
                               	</animation>
				<visible>Skin.HasSetting(Deck_Grainy)</visible>
			</control>
		</control>

		<!-- Deck Custom Background -->
		<control type="group">
			<visible>[!isEmpty(Skin.String(Deck_Single)) | !isEmpty(Skin.String(Deck_Multi))]</visible>
			<visible>Control.hasFocus(11000) | Control.hasFocus(11001) | Control.hasFocus(11002) | Control.hasFocus(11003) | Control.hasFocus(11004) | Control.hasFocus(11005) | Control.hasFocus(11006) | Control.hasFocus(11007) | Control.hasFocus(11008) | Control.hasFocus(11009) | Control.hasFocus(11012)</visible>
			<include>Deck_Custom</include>
		</control>

		<!-- XBMC Fanart -->
		<include condition="Skin.HasSetting(XBMC)">XBMC_Background</include>
		<include condition="Skin.HasSetting(XBMC)">XBMC_Home_Custom_Backgrounds</include>

		<!-- Now Playing  -->
		<control type="group">
			<visible>Container(300).hasFocus(17)</visible>	
			<include>Home_Opacity_Default</include>
			<!-- Audio -->
			<control type="image">
				<aspectratio scalediffuse="false" aligny="center">scale</aspectratio>
				<include>background_default</include>
				<texture>$INFO[MusicPlayer.Cover]</texture>
				<visible>Player.HasAudio</visible>
			</control>
 			<!-- Video -->
			<control type="videowindow">
				<include>background_default</include>
				<visible>Player.HasVideo</visible>
			</control>
		</control>

		<!-- Favourites  -->
		<control type="group">
			<include>Home_Opacity_Default</include>
			<visible>!Skin.HasSetting(XBMC) + [ 
			Container(300).hasFocus(400) | Container(300).hasFocus(401) | Container(300).hasFocus(402) | Container(300).hasFocus(403) | Container(300).hasFocus(404) |
			Container(300).hasFocus(405) | Container(300).hasFocus(406) | Container(300).hasFocus(407) | Container(300).hasFocus(408) | Container(300).hasFocus(409) |
			Container(300).hasFocus(410) | Container(300).hasFocus(411) | Container(300).hasFocus(412) | Container(300).hasFocus(413) | Container(300).hasFocus(414) |
			Container(300).hasFocus(415) | Container(300).hasFocus(416) | Container(300).hasFocus(417) | Container(300).hasFocus(418) | Container(300).hasFocus(419) ]
			</visible>

			<control type="image">
				<include>background_default</include>
				<texture>$VAR[Var_Favourite_Background]</texture>
                              	<!-- Fadetime Option -->
                                <include condition="isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime_Default</include>
                                <include condition="!isEmpty(Skin.String(Home_Fadetime))">Home_Fadetime</include>
                                <!-- Time per Image Option -->
                                <include condition="isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage_Default</include>
                                <include condition="!isEmpty(Skin.String(Home_TimePerImage))">Home_TimePerImage</include>
                                <!-- Kenburns Option -->
                                <include condition="Skin.HasSetting(Home_Kenburns)">background_kenburns</include>
			</control>
		</control>

		<!-- PLEX -->
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom1_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom2_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom3_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom4_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom5_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom6_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom7_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom8_Custom</include>
		<include condition="!Skin.HasSetting(XBMC)">PLEX_Custom9_Custom</include>

		<!-- Home Extentions Background -->
		<include condition="!Skin.HasSetting(XBMC)">Home_Extension_Background</include>

		<!-- XBMC -->
		<include condition="Skin.HasSetting(XBMC)">Plex_Custom</include>
		<include condition="Skin.HasSetting(XBMC)">Weather_Custom</include>
		<include condition="Skin.HasSetting(XBMC)">Pictures_Custom</include>

		<!-- Search Custom Background -->
		<include>Search_Custom</include>

	<!--</control>-->

	<!-- Vertical Home Menu -->
	<control type="group">
		<visible>![Skin.HasSetting(Home_Horizontal) | Skin.HasSetting(Home_Panel)]</visible>
		<!-- Homescreen Background Overlay -->
		<control type="image">
			<posx>0</posx>
			<posy>0</posy>
			<include>Dimensions_Fullscreen</include>
			<texture>mainmenu/vignette.png</texture>
			<colordiffuse>ff15efd9</colordiffuse>
			<include>Animation_CommonFadeNoHide</include>
			<visible>![ Skin.HasSetting(Home_Horizontal) | Skin.HasSetting(Home_Panel) ]</visible>
		</control>
		<!-- Navigation Arrow (Submenu) -->
		<control type="image">
			<posy>690</posy>
			<posx>15</posx>
			<width>16</width>
			<height>22</height>
			<aspectratio>scale</aspectratio>
			<texture background="true">left-menu-indicator-arrow.png</texture>
			<include condition="!Skin.HasSetting(NoAccentArrow)">NoAccentArrow</include>
			<colordiffuse>50b8b7b7</colordiffuse>
                        <animation effect="slide" end="17" time="300" condition="Window.IsActive(4998)">conditional</animation>
                        <animation effect="fade" end="0" time="300" reversible="false">hidden</animation>
			<visible>!Skin.HasSetting(HomeArrow) + Window.IsActive(4998)</visible>
			<include>Animation_CommonFade</include>
		</control>
		<!-- Navigation Arrow (Home) -->
		<control type="image">
			<posy>690</posy>
			<posx>10</posx>
			<width>16</width>
			<height>22</height>
			<aspectratio>scale</aspectratio>
			<texture background="true" flipx="true">left-menu-indicator-arrow.png</texture>
			<include condition="!Skin.HasSetting(NoAccentArrow)">NoAccentArrow</include>
			<colordiffuse>50b8b7b7</colordiffuse>
			<visible>!Skin.HasSetting(HomeArrow) + !ControlGroup(5000).HasFocus</visible>
			<include>Animation_CommonFade</include>
		</control>
	</control>

	<!-- Show Server Name -->
	<control type="grouplist">
		<posx>35</posx>
		<posy>690</posy>
		<width>400</width>
		<height>40</height>
		<align>left</align>
		<usecontrolcoords>true</usecontrolcoords>
		<orientation>horizontal</orientation>
		<itemgap>4</itemgap>
		<visible>Control.hasFocus(300) + Skin.HasSetting(Home_Servername) + !isEmpty(Container(300).ListItem.Label2) + ![ Window.IsActive(4998) ]</visible>
		<!-- Name -->
		<control type="label">		
			<width  min="0" max="300">auto</width>
			<textcolor>FFCCCCCC</textcolor>
			<label>$INFO[Container(300).ListItem.Label2]</label>
			<font>Font_Date</font>
			<include>Animation_CommonFade</include>
		</control>
		<!-- Secure Connection -->
		<control type="image">
			<posy>3</posy>
			<width>16</width>
			<height>16</height>
			<aspectratio>keep</aspectratio>
			<colordiffuse>FFCCCCCC</colordiffuse>
			<texture background="true">nav_lock_close.png</texture>
			<visible>!IsEmpty(ListItem.Property(isSecure))</visible>
		</control>
	</control>

	<!-- Clock -->
	<include>Global_Time_Home</include>
	<include>Global_Time_Home_Big</include>

	<!-- Weather -->
	<include>Weather_Widget</include>

	<!-- Current User -->
	<include condition="!Skin.HasSetting(NoUserAvatar)">CurrentAvatar</include>

	<!-- Home Navigation -->
	<include>Home_Navigation</include>

	<!-- Home Deck -->
	<include>Home_Deck</include>

	<!-- Now Playing -->
	<control type="group">
		<animation effect="zoom" end="90" condition="Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Home_Horizontal_Bottom)">Conditional</animation>
		<animation effect="slide" end="50,20" condition="Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Home_Horizontal_Bottom)">Conditional</animation>

		<visible>Player.HasVideo | Player.HasAudio</visible>
		<posx>860</posx>
		<posy>640</posy>
		<control type="image">
			<posx>-280</posx>
			<posy>-100</posy>
			<width>700</width>
			<height>220</height>
			<texture background="true" flipy="true">common/library_time_gradient.png</texture>
			<visible>![Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Home_Horizontal_Bottom)]</visible>
		</control>
		<include>viewtype_nowplaying_right</include>
	</control>

	<!-- Mouse Trigger -->
	<control type="group">
		<visible>Window.isActive(home) + !ControlGroup(5000).hasFocus</visible>
		<!-- Submenu (Left Edge) -->
		<control type="button" id="65010">
			<posx>10</posx>
			<posy>0</posy>
			<height>670</height>
			<width>10</width>
			<include>Mouse_Trigger</include>
		</control>
		<control type="button" id="65011">
			<posx>0</posx>
			<posy>0</posy>
			<height>670</height>
			<width>10</width>
			<onfocus>ActivateWindow(4998)</onfocus>
			<include>Mouse_Trigger</include>
			<visible>Control.hasFocus(65010) | Control.hasFocus(65011)</visible>
		</control>
		<!-- Submenu (Button) -->
		<control type="button">
			<posx>0</posx>
			<posy>690</posy>
			<width>80</width>
			<height>30</height>
			<onclick>ActivateWindow(4998)</onclick>
			<include>Mouse_Trigger</include>
		</control>
		<!-- Deck (Hide) -->
		<control type="button">
			<posx>1260</posx>
			<posy>0</posy>
			<width>20</width>
			<height>720</height>
			<onfocus>SetFocus(5000)</onfocus>
			<include>Mouse_Trigger</include>
			<visible>Skin.HasSetting(Deck_Hide) + !Skin.HasSetting(Deck_Disable)</visible>
		</control>
	</control>

	<!-- Mouse Trigger (Deck) -->
<!--	<control type="button" id="65000">
		<posx>700</posx>
		<posy>0</posy>
		<width>30</width>
		<height>720</height>
		<include>Mouse_Trigger</include>
		<visible>!ControlGroup(5000).hasFocus</visible>
        </control>-->

	</controls>
</window>
