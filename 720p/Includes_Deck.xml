<?xml version="1.0" encoding="UTF-8"?>
<includes>

<!-- Deck Background -->
<variable name="Deck_Background_ControlGroup">
	<!-- PLEX -->
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7000).HasFocus">$INFO[Container(11000).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7001).HasFocus">$INFO[Container(11001).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7002).HasFocus">$INFO[Container(11002).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7003).HasFocus">$INFO[Container(11003).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7004).HasFocus">$INFO[Container(11004).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7005).HasFocus">$INFO[Container(11005).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7006).HasFocus">$INFO[Container(11006).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7007).HasFocus">$INFO[Container(11007).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7008).HasFocus">$INFO[Container(11008).ListItem.Art(fanart)]</value>
        <value condition="!Skin.HasSetting(XBMC) + ControlGroup(7009).HasFocus">$INFO[Container(11009).ListItem.Art(fanart)]</value>
	<!-- XBMC -->
        <value condition="Skin.HasSetting(XBMC) + ControlGroup(7000).HasFocus">$INFO[Container(11000).ListItem.Property(fanart)]</value>
        <value condition="Skin.HasSetting(XBMC) + ControlGroup(7001).HasFocus">$INFO[Container(11001).ListItem.Property(fanart)]</value>
        <value condition="Skin.HasSetting(XBMC) + ControlGroup(7010).HasFocus">$INFO[Container(11010).ListItem.Property(fanart)]</value>
</variable>

<include name="Home_Deck">
	<control type="group" id="5000">
		<visible>![ Skin.HasSetting(Home_Panel) | Skin.HasSetting(Deck_Disable)]</visible>

		<!-- Vertical Home -->
		<animation effect="slide" end="730,275" condition="!Skin.HasSetting(Home_Horizontal) + ![Skin.HasSetting(Deck_Short) | Skin.HasSetting(Deck_Hide)]">Conditional</animation>
		<animation effect="slide" end="1150,275" condition="!Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short)">Conditional</animation>
		<animation effect="slide" end="1350,275" condition="!Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Hide)">Conditional</animation>

		<!-- Animation ON -->
		<animation effect="slide" end="-590,0" time="800" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ![Skin.HasSetting(Deck_Short) | Skin.HasSetting(Deck_Hide)] + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="-990,0" time="900" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="-1190,0" time="1000" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Hide) + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="730,0" time="800" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Window.IsActive(4998)">Conditional</animation>

		<!-- Animation OFF -->
		<animation effect="slide" end="-590,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ![Skin.HasSetting(Deck_Short) | Skin.HasSetting(Deck_Hide)] + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="-990,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="-1190,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Hide) + ControlGroup(5000).HasFocus">conditional</animation>
		<animation effect="slide" end="730,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Window.IsActive(4998)">Conditional</animation>

		<!-- Horizontal Home -->
		<animation effect="slide" end="165,90" condition="Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Deck_Hide)">Conditional</animation>
		<animation effect="slide" end="165,-200" condition="Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Hide)">Conditional</animation>

		<!-- On Deck -->
		<control type="group" id="7001">
			<visible>!Skin.HasSetting(Deck_NoOnDeck) + 
				 [ !Skin.hasSetting(XBMC) + Control.isVisible(11001)] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(3) + !isEmpty(Window(Home).Property(RecommendedMovie.1.Title))   ] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(4) + !isEmpty(Window(Home).Property(RecommendedEpisode.1.Title)) ] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(5) + !isEmpty(Window(Home).Property(RecommendedAlbum.1.Title))]
			</visible>
			<include>Animation_CommonFade_600</include>		

			<control type="group">
				<!-- Vertical Home -->
				<animation effect="slide" end="0,-100" time="600" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) + Control.IsVisible(11001)]">Conditional</animation>
				<animation effect="slide" end="0,-100" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) + Control.IsVisible(11001)]">Conditional</animation>

				<animation effect="fade" start="100" end="60" time="400" condition="Control.HasFocus(11000)">conditional</animation>

				<!-- Horizontal Home -->
				<animation effect="slide" end="0,-300" time="600" tween="cubic" easing="inout" condition="Skin.HasSetting(Home_Horizontal) + Control.hasFocus(11000)">Conditional</animation>

				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>31051</label> <!-- On Deck -->
				</control>
				<control type="fixedlist" id="11001">
					<ondown condition="!Skin.HasSetting(Home_Horizontal)">11000</ondown>
					<onup condition="Skin.HasSetting(Home_Horizontal)">11000</onup>
					<include>Deck_Content</include>

					<!-- XBMC Items -->
					<include condition="Skin.HasSetting(XBMC)">XBMC_Deck_Recommended_Items</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11001)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11001)</visible>
				<include condition="!Skin.HasSetting(Deck_NoAnimation)">Animation_CommonFade_Deck_400</include>
				<!-- Animation ON -->
				<animation effect="slide" end="0,-275" time="400" delay="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) ] + Control.HasFocus(11001)">Conditional</animation>
				<animation effect="slide" end="0,175" time="400" delay="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11000) | Skin.HasSetting(Deck_NoRecently) ] + Control.HasFocus(11001)">Conditional</animation>
				<!-- Animation OFF -->
				<animation effect="slide" end="0,-275" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) ] + Control.HasFocus(11001)">Conditional</animation>
				<animation effect="slide" end="0,175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11000) | Skin.HasSetting(Deck_NoRecently) ] + Control.HasFocus(11001)">Conditional</animation>

				<include condition="Skin.HasSetting(Home_Horizontal)">Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11001)</visible>
				<include condition="!Skin.HasSetting(Deck_NoAnimation)">Animation_CommonFade_Deck_400</include>
				<!-- Animation ON -->
				<animation effect="slide" end="0,275" time="400" delay="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) ] + Control.HasFocus(11001)">Conditional</animation>
				<animation effect="slide" end="0,-175" time="400" delay="400" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11000) | Skin.HasSetting(Deck_NoRecently) ] + Control.HasFocus(11001)">Conditional</animation>
				<!-- Animation OFF -->
				<animation effect="slide" end="0,275" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + Control.IsVisible(11000) ] + Control.HasFocus(11001)">Conditional</animation>
				<animation effect="slide" end="0,-175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11000) | Skin.HasSetting(Deck_NoRecently) ] + Control.HasFocus(11001)">Conditional</animation>

				<include condition="Skin.HasSetting(Home_Horizontal)">Deck_Information_More_Position</include>
				<include>Deck_Information_More</include>
			</control>
		</control>

		<!-- Recently Added -->
		<control type="group" id="7000">
			<visible>!Skin.HasSetting(Deck_NoRecently) +
				 [ !Skin.hasSetting(XBMC) + Control.isVisible(11000)] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(3) + !isEmpty(Window(Home).Property(RecentMovie.1.Title))   ] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(4) + !isEmpty(Window(Home).Property(RecentEpisode.1.Title)) ] | 
				 [ Skin.HasSetting(XBMC) + Container(300).hasFocus(5) + !isEmpty(Window(Home).Property(RecentAlbum.1.Title))]
			</visible>
			<include>Animation_CommonFade_600</include>		

			<control type="group">
				<!-- Vertical Home -->
				<animation effect="slide" end="0,100" time="600" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) + Control.IsVisible(11000)]">Conditional</animation>
				<animation effect="slide" end="0,100" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) + Control.IsVisible(11000)]">Conditional</animation>

				<animation effect="fade" start="100" end="60" time="400" condition="Control.HasFocus(11001)">conditional</animation>

				<!-- Horizontal Home -->
				<animation effect="slide" end="0,-300" condition="Skin.HasSetting(Home_Horizontal) + Control.IsVisible(11001)">Conditional</animation>
				<animation effect="slide" end="0,300" time="600" tween="cubic" easing="inout" condition="Skin.HasSetting(Home_Horizontal) + Control.hasFocus(11000) + Control.IsVisible(11001)">Conditional</animation>

				<include>Deck_Placeholder</include>
				<control type="label">
					<animation effect="slide" end="0,205" condition="!Skin.HasSetting(Home_Horizontal) + Control.IsVisible(11001) + Control.IsVisible(11000)">Conditional</animation>
					<include>Deck_Name</include>
					<label>31052</label> <!-- Recently Added -->
				</control>
				<control type="fixedlist" id="11000">
					<onup>11001</onup>
					<include>Deck_Content</include>

					<!-- XBMC -->
					<include condition="Skin.HasSetting(XBMC)">XBMC_Deck_Recent_Items</include>
				</control>
				<control type="group">
					<include>Animation_CommonFade_600</include>
					<visible>Control.hasFocus(11000)</visible>
					<include>Deck_Focus</include>
				</control>

			</control>

			<control type="group">
				<visible>Control.HasFocus(11000)</visible>
				<include condition="!Skin.HasSetting(Deck_NoAnimation)">Animation_CommonFade_Deck_400</include>
				<!-- Animation ON -->
				<animation effect="slide" end="0,275" time="400" tween="cubic" easing="out" delay="400" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) ] + Control.HasFocus(11000)">Conditional</animation>
				<animation effect="slide" end="0,175" time="400" tween="cubic" easing="out" delay="400" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11001) | Skin.HasSetting(Deck_NoOnDeck) ] + Control.HasFocus(11000)">Conditional</animation>
				<!-- Animation OFF -->
				<animation effect="slide" end="0,275" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) ] + Control.HasFocus(11000)">Conditional</animation>
				<animation effect="slide" end="0,175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11001) | Skin.HasSetting(Deck_NoOnDeck) ] + Control.HasFocus(11000)">Conditional</animation>

				<include condition="Skin.HasSetting(Home_Horizontal)">Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11000) + ![Container(11000).ListItem.Type(album) | Container(11000).ListItem.Type(photo)]</visible>
				<include condition="!Skin.HasSetting(Deck_NoAnimation)">Animation_CommonFade_Deck_400</include>
				<!-- Animation ON -->
				<animation effect="slide" end="0,-275" time="400" tween="cubic" easing="out" delay="400" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) ] + Control.HasFocus(11000)">Conditional</animation>
				<animation effect="slide" end="0,-175" time="400" tween="cubic" easing="out" delay="400" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11001) | Skin.HasSetting(Deck_NoOnDeck) ] + Control.HasFocus(11000)">Conditional</animation>
				<!-- Animation OFF -->
				<animation effect="slide" end="0,-275" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoOnDeck) + Control.IsVisible(11001) ] + Control.HasFocus(11000)">Conditional</animation>
				<animation effect="slide" end="0,-175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + [ !Control.IsVisible(11001) | Skin.HasSetting(Deck_NoOnDeck) ] + Control.HasFocus(11000)">Conditional</animation>

				<include condition="Skin.HasSetting(Home_Horizontal)">Deck_Information_More_Position</include>
				<include>Deck_Information_More</include>
			</control>

		</control>

		<!-- Recently Used -->
		<control type="group" id="7002">
			<visible>Control.isVisible(11002) + ![ Skin.HasSetting(Deck_NoRecently) | Skin.HasSetting(XBMC) ]</visible>
			<include>Animation_CommonFade_600</include>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>31053</label> <!-- Recently Used -->
				</control>
				<control type="fixedlist" id="11002">
					<include>Deck_Content</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11002)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11002)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>
		</control>

		<!-- Queue -->
		<control type="group" id="7003">
			<visible>Control.isVisible(11003) + ![ Skin.HasSetting(Deck_NoQueue) | Skin.HasSetting(XBMC) ]</visible>
			<include>Animation_CommonFade_600</include>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>31054</label> <!-- Queue -->
				</control>
				<control type="fixedlist" id="11003">
					<include>Deck_Content</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11003)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11003)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>
		</control>

		<!-- Play Queue (Video/11005) -->
		<control type="group" id="7005">
			<visible>Control.isVisible(11005) + ![ Skin.HasSetting(Deck_NoPlayQueue) | Skin.HasSetting(XBMC) ]</visible>
			<include>Animation_CommonFade_600</include>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Video</label> <!-- Video -->
				</control>
				<control type="fixedlist" id="11005">
					<include>Deck_Content</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11005)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11005)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>
			<control type="group">
				<visible>Control.HasFocus(11005)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_More_Position</include>
				<include>Deck_Information_More</include>
			</control>

		</control>

		<!-- Play Queue (Music/11006) -->
		<control type="group" id="7006">
			<visible>Control.isVisible(11006) + ![ Skin.HasSetting(Deck_NoPlayQueue) | Skin.HasSetting(XBMC) ]</visible>
			<include>Animation_CommonFade_600</include>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Music</label> <!-- Music -->
				</control>
				<control type="fixedlist" id="11006">
					<include>Deck_Content</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11006)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11006)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>
		</control>

		<!-- Play Queue (Photo/11007) -->
		<control type="group" id="7007">
			<visible>Control.isVisible(11007) + ![ Skin.HasSetting(Deck_NoPlayQueue) | Skin.HasSetting(XBMC) ]</visible>
			<include>Animation_CommonFade_600</include>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Photos</label> <!-- Photos -->
				</control>
				<control type="fixedlist" id="11007">
					<include>Deck_Content</include>
				</control>
				<control type="group">
					<visible>Control.hasFocus(11007)</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>

			<control type="group">
				<visible>Control.HasFocus(11007)</visible>
				<include>Animation_CommonFade_600</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
			</control>
		</control>

		<!-- Now Playing (WORK HERE) -->
		<control type="group" id="7008">
			<visible>false</visible>
			<include>Animation_CommonFade_600</include>
                        <visible>Container(300).hasFocus(17)</visible>

                        <control type="group">
                                <posx>135</posx>
                                <posy>135</posy>
                                <include>NowPlayingTime</include>

                        </control>
                        <control type="group">
                                <posx>-80</posx>
                                <posy>170</posy>
                                <include>NowPlayingControl</include>
                        </control>
                </control>


		<!-- Shared Content -->
		<control type="group" id="7009">
			<include>Animation_CommonFade_600</include>
			<visible>SubString(Container(300).ListItem.Label,$LOCALIZE[44020]) + ![ Skin.HasSetting(Deck_NoShared) | Skin.HasSetting(XBMC) ]</visible>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>44020</label><!-- Shared Content -->
				</control>
				<control type="fixedlist" id="11009">
					<include>Deck_Content</include>
					<content>
					<item>
						<label fallback="Not Available">$INFO[Skin.String(mysharedcontent_servername)]</label>
						<icon>share-icon.png</icon>
						<property name="Type">Channel</property>
						<onclick>test</onclick>
					</item>
					</content>
				</control>
			</control>
		</control>









		<!-- Live TV (Next Aired) -->
		<control type="group" id="7010">
			<include>Animation_CommonFade_600</include>
			<visible>Skin.HasSetting(XBMC) + Container(300).hasFocus(1) + !isEmpty(Window(Home).Property(NextAired.1.Label))</visible>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Aired Today ($INFO[Window(Home).Property(NextAired.TodayTotal)])</label><!-- Airing Today -->
				</control>
				<control type="fixedlist" id="11010">
					<include>Deck_Content</include>
					<include>XBMC_Deck_NextAired_Items</include>
				</control>
				<control type="group">
					<visible>ControlGroup(7010).hasFocus</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>
  
			<control type="group">
				<visible>ControlGroup(7010).HasFocus</visible>
				<include>Animation_CommonFade_Deck_400</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
                        </control>

			<control type="group">
				<visible>ControlGroup(7010).HasFocus</visible>
                                <include>Animation_CommonFade_Deck_400</include>
                                <include>Deck_Information_More_Position</include>
                                <include>Deck_Information_More</include>
                        </control>

		</control>

		<!-- PlexXBMC -->
		<control type="group" id="7080">
			<include>Animation_CommonFade_600</include>
			<visible>Skin.HasSetting(XBMC) + Container(300).hasFocus(8)</visible>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Plex</label>
				</control>
				<control type="fixedlist" id="11080">
					<include>Deck_Content</include>
					<content>
						<include>XBMC_Deck_Plexbmc_Items</include>
					</content>
				</control>
				<control type="group">
					<visible>ControlGroup(7080).hasFocus</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>
  
			<control type="group">
				<visible>ControlGroup(7080).HasFocus</visible>
				<include>Animation_CommonFade_Deck_400</include>
				<include>Deck_Information_Position</include>
				<include>Deck_Information</include>
                        </control>

			<control type="group">
				<visible>ControlGroup(7080).HasFocus</visible>
                                <include>Animation_CommonFade_Deck_400</include>
                                <include>Deck_Information_More_Position</include>
                                <include>Deck_Information_More</include>
                        </control>

		</control>


		<!-- Favourites 1 -->
		<control type="group" id="7012">
			<include>Animation_CommonFade_600</include>
			<visible>Skin.HasSetting(XBMC) + Container(300).hasFocus(9) + !isEmpty(Window(Home).Property(favourite.1.path))</visible>

			<!-- Vertical Home -->
			<animation effect="slide" end="0,-100" time="600" tween="cubic" easing="out" condition="!Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + !isEmpty(Window(Home).Property(favourite.8.path)) ]">Conditional</animation>
			<animation effect="fade" start="100" end="60" time="400" condition="Control.HasFocus(11013)">conditional</animation>

			<!-- Horizontal Home -->
			<animation effect="slide" end="0,-300" time="600" tween="cubic" easing="inout" condition="Skin.HasSetting(Home_Horizontal) + Control.hasFocus(11013)">Conditional</animation>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
					<include>Deck_Name</include>
					<label>Favourites</label>
				</control>
				<control type="fixedlist" id="11012">
					<ondown condition="!Skin.HasSetting(Home_Horizontal)">11013</ondown>
					<onup condition="Skin.HasSetting(Home_Horizontal)">11013</onup>
					<include>Deck_Content</include>
					<include>XBMC_Deck_Favourite_Items1</include>
				</control>
				<control type="group">
					<visible>ControlGroup(7012).hasFocus</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>
  
			<control type="group">
				<visible>ControlGroup(7012).HasFocus</visible>
				<include>Animation_CommonFade_Deck_400</include>
				<include>Deck_Information</include>
                        </control>

		</control>

		<!-- Favourites 2 -->
		<control type="group" id="7013">
			<include>Animation_CommonFade_600</include>
			<visible>Skin.HasSetting(XBMC) + Container(300).hasFocus(9) + !isEmpty(Window(Home).Property(favourite.8.path))</visible>

			<!-- Vertical Home -->
			<animation effect="slide" end="0,100" time="600" tween="cubic" easing="out" condition="!Skin.HasSetting(Home_Horizontal) + [ !Skin.HasSetting(Deck_NoRecently) + !isEmpty(Window(Home).Property(favourite.1.path)) ]">Conditional</animation>
			<animation effect="fade" start="100" end="60" time="400" condition="Control.HasFocus(11012)">conditional</animation>

			<!-- Horizontal Home -->
			<animation effect="slide" end="0,-300" time="600" tween="cubic" easing="inout" condition="Skin.HasSetting(Home_Horizontal) + Control.hasFocus(11013)">Conditional</animation>

			<control type="group">
				<include>Deck_Placeholder</include>
				<control type="label">
                                        <animation effect="slide" end="0,200" condition="true">Conditional</animation>
					<include>Deck_Name</include>
					<label>Favourites</label>
				</control>
				<control type="fixedlist" id="11013">
					<onup condition="!Skin.HasSetting(Home_Horizontal)">11012</onup>
					<ondown condition="Skin.HasSetting(Home_Horizontal)">11012</ondown>
					<include>Deck_Content</include>
					<include>XBMC_Deck_Favourite_Items2</include>
				</control>
				<control type="group">
					<visible>ControlGroup(7013).hasFocus</visible>
					<include>Animation_CommonFade_600</include>
					<include>Deck_Focus</include>
				</control>
			</control>
  
			<control type="group">
				<visible>ControlGroup(7013).HasFocus</visible>
				<include>Animation_CommonFade_Deck_400</include>
				<include>Deck_Information</include>
                        </control>

		</control>


		<!-- XBMC CUSTOM HOME -->
		<include condition="Skin.HasSetting(XBMC)">XBMC_Home_Custom_Deck</include>

		<!-- PLEX DECK EXTENSIONS -->
		<include condition="!Skin.HasSetting(XBMC)">Home_Extension_Deck</include>

	</control>
</include>

<!-- DECK FOCUS -->
<include name="Deck_Focus">
	<!-- Arrow --> 
	<control type="image">
		<posy>72</posy>
		<posx>-20</posx>
		<width>18</width>
		<height>26</height>
		<texture background="true">arrowdeck.png</texture>
		<colordiffuse>mainblue</colordiffuse>
		<aspectratio>scale</aspectratio>
		<!--21 x 33-->
	</control>
	<!-- Focus Frame -->
	<control type="image">
		<posx>-2</posx>
		<posy>-2</posy>
		<width>114</width>
		<height>174</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>mainblue</colordiffuse>
	</control>
</include>

<!-- DECK INFORMATION POSITION -->
<include name="Deck_Information_Position">
	<include>Animation_CommonFade_600</include>

	<!-- Vertical Animation -->
	<animation effect="slide" end="0,175" time="400" tween="cubic" easing="out" delay="500" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ControlGroup(5000).HasFocus">Conditional</animation>
	<animation effect="slide" end="0,175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ControlGroup(5000).HasFocus">Conditional</animation>

	<!-- Horizontal Animation -->
	<animation effect="slide" end="0,330" time="600" tween="cubic" easing="out" condition="Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Home_Horizontal_Bottom) + ControlGroup(5000).HasFocus">Conditional</animation>
	<animation effect="slide" end="0,200" time="600" tween="cubic" easing="out" condition="Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Home_Horizontal_Bottom) + ControlGroup(5000).HasFocus">Conditional</animation>
</include>
<include name="Deck_Information_More_Position">
	<include>Animation_CommonFade_600</include>

	<!-- Vertical Animation -->
	<animation effect="slide" end="0,-175" time="400" delay="500" tween="cubic" easing="out" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ControlGroup(5000).HasFocus">Conditional</animation>
	<animation effect="slide" end="0,-175" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + ControlGroup(5000).HasFocus">Conditional</animation>

	<!-- Horizontal Animation -->
	<animation effect="slide" end="0,450" time="600" tween="cubic" easing="out" condition="Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Home_Horizontal_Bottom) + ControlGroup(5000).HasFocus">Conditional</animation>
	<animation effect="slide" end="0,320" time="600" tween="cubic" easing="out" condition="Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Home_Horizontal_Bottom) + ControlGroup(5000).HasFocus">Conditional</animation>
</include>

<!-- DECK INFORMATION -->
<include name="Deck_Information">
	<control type="group">
		<posy>5</posy>
		<control type="label">
			<posy>0</posy>
			<height>80</height>
			<align>left</align>
			<label>$VAR[Deck_Label_Title_1]</label>
			<font>Font_Bartowski_MainMenu</font>
			<scroll>false</scroll>
			<textcolor>mainblue</textcolor>
			<wrapmultiline>false</wrapmultiline>
			<width min="1" max="870">auto</width>
			<visible>!Skin.HasSetting(AeonHomeMenu)</visible>
		</control>
		<control type="label">
			<posy>0</posy>
			<height>80</height>
			<align>left</align>
			<label>$VAR[Deck_Label_Title_1]</label>
			<font>AeonFont_MainMenu_Focus</font>
			<scroll>false</scroll>
			<textcolor>mainblue</textcolor>
			<wrapmultiline>false</wrapmultiline>
			<width min="1" max="870">auto</width>
			<visible>Skin.HasSetting(AeonHomeMenu)</visible>
		</control>
		<!-- Animation Test -->
		<!--<control type="label">
			<posy>0</posy>
			<height>80</height>
			<align>left</align>
			<label>&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;</label>

			<font>Font_Bartowski_MainMenu</font>
			<textcolor>mainblue</textcolor>
			<width min="1" max="870">auto</width>
			<visible>Control.hasFocus(300)</visible>
		</control>-->

		<control type="label">
			<posy>80</posy>
			<height>80</height>
			<align>left</align>
			<label>$VAR[Deck_Label_Title_2]</label>
			<font>Font_Bartowski_Main_SubMenu</font>
			<scroll>true</scroll>
			<textcolor>white</textcolor>
			<wrapmultiline>false</wrapmultiline>
			<width min="1" max="850">auto</width>
			<visible>!Skin.HasSetting(AeonHomeMenu)</visible>
		</control>
		<control type="label">
			<posy>85</posy>
			<height>80</height>
			<align>left</align>
			<label>$VAR[Deck_Label_Title_2]</label>
			<font>Font_Bartowski_Main_SubMenu</font>
			<scroll>true</scroll>
			<textcolor>white</textcolor>
			<wrapmultiline>false</wrapmultiline>
			<width min="1" max="850">auto</width>
			<visible>Skin.HasSetting(AeonHomeMenu)</visible>
		</control>
		<!--
		<control type="label">
			<posy>85</posy>
			<height>80</height>
			<align>left</align>
			<label>&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;&#xB7;</label>
			<font>Font_Bartowski_MainMenu</font>
			<textcolor>white</textcolor>
			<visible>Control.hasFocus(300)</visible>
		</control>-->
	</control>
</include>
<variable name="Deck_Label_Title_1">
	<!-- XBMC -->
        <value condition="Control.HasFocus(11000) + Skin.HasSetting(XBMC)">$INFO[Container(11000).ListItem.Label]</value>
        <value condition="Control.HasFocus(11001) + Skin.HasSetting(XBMC)">$INFO[Container(11001).ListItem.Label]</value>
        <value condition="Control.HasFocus(11010) + Skin.HasSetting(XBMC)">$INFO[Container(11010).ListItem.Label]</value>
        <value condition="Control.HasFocus(11012) + Skin.HasSetting(XBMC)">$INFO[Container(11012).ListItem.Label]</value>

	<!-- XBMC Custom Home -->
        <value condition="Control.HasFocus(11050) + Skin.HasSetting(XBMC)">$INFO[Container(11050).ListItem.Label]</value>
        <value condition="Control.HasFocus(11051) + Skin.HasSetting(XBMC)">$INFO[Container(11051).ListItem.Label]</value>
        <value condition="Control.HasFocus(11052) + Skin.HasSetting(XBMC)">$INFO[Container(11052).ListItem.Label]</value>
        <value condition="Control.HasFocus(11053) + Skin.HasSetting(XBMC)">$INFO[Container(11053).ListItem.Label]</value>
        <value condition="Control.HasFocus(11054) + Skin.HasSetting(XBMC)">$INFO[Container(11054).ListItem.Label]</value>
        <value condition="Control.HasFocus(11055) + Skin.HasSetting(XBMC)">$INFO[Container(11055).ListItem.Label]</value>
        <value condition="Control.HasFocus(11056) + Skin.HasSetting(XBMC)">$INFO[Container(11056).ListItem.Label]</value>
        <value condition="Control.HasFocus(11057) + Skin.HasSetting(XBMC)">$INFO[Container(11057).ListItem.Label]</value>
        <value condition="Control.HasFocus(11058) + Skin.HasSetting(XBMC)">$INFO[Container(11058).ListItem.Label]</value>
        <value condition="Control.HasFocus(11059) + Skin.HasSetting(XBMC)">$INFO[Container(11059).ListItem.Label]</value>

	<!-- Recently Added -->
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(episode)">$INFO[Container(11000).ListItem.TVShowTitle]</value>
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(album)">$INFO[Container(11000).ListItem.Artist]</value>
	<value condition="Control.HasFocus(11000) + ![Container(11000).ListItem.Type(episode) | Container(11000).ListItem.Type(album)]">$INFO[Container(11000).ListItem.Title]</value>

	<!-- On Deck -->
	<value condition="Control.HasFocus(11001) + Container(11001).ListItem.Type(episode)">$INFO[Container(11001).ListItem.TVShowTitle]</value>
	<value condition="Control.HasFocus(11001) + ![Container(11001).ListItem.Type(episode)]">$INFO[Container(11001).ListItem.Title]</value>

	<!-- Recently Used -->
	<value condition="Control.HasFocus(11002)">$INFO[Container(11002).ListItem.Title]</value>

	<!-- Queue -->
	<value condition="Control.HasFocus(11003)">$INFO[Container(11003).ListItem.Title]</value>

	<!-- PlayQueue -->
	<value condition="Control.HasFocus(11005) + Container(11005).ListItem.Type(episode)">$INFO[Container(11005).ListItem.TVShowTitle]</value>
	<value condition="Control.HasFocus(11005) + !Container(11005).ListItem.Type(episode)">$INFO[Container(11005).ListItem.Title]</value>

	<value condition="Control.HasFocus(11006)">$INFO[Container(11006).ListItem.Artist]</value>

	<value condition="Control.HasFocus(11007)">$INFO[Container(11007).ListItem.Title]</value>

	<!-- Home Extennsions -->
	<value condition="Control.HasFocus(8850)">$INFO[Container(8850).ListItem.Label]</value>
	<value condition="Control.HasFocus(8851)">$INFO[Container(8851).ListItem.Label]</value>
	<value condition="Control.HasFocus(8852)">$INFO[Container(8852).ListItem.Label]</value>
	<value condition="Control.HasFocus(8853)">$INFO[Container(8853).ListItem.Label]</value>
	<value condition="Control.HasFocus(8854)">$INFO[Container(8854).ListItem.Label]</value>
	<value condition="Control.HasFocus(8855)">$INFO[Container(8855).ListItem.Label]</value>
	<value condition="Control.HasFocus(8856)">$INFO[Container(8856).ListItem.Label]</value>
	<value condition="Control.HasFocus(8857)">$INFO[Container(8857).ListItem.Label]</value>
	<value condition="Control.HasFocus(8858)">$INFO[Container(8858).ListItem.Label]</value>
	<value condition="Control.HasFocus(8859)">$INFO[Container(8859).ListItem.Label]</value>
	<value condition="Control.HasFocus(8860)">$INFO[Container(8860).ListItem.Label]</value>
	<value condition="Control.HasFocus(8861)">$INFO[Container(8861).ListItem.Label]</value>
	<value condition="Control.HasFocus(8862)">$INFO[Container(8862).ListItem.Label]</value>
	<value condition="Control.HasFocus(8863)">$INFO[Container(8863).ListItem.Label]</value>
	<value condition="Control.HasFocus(8864)">$INFO[Container(8864).ListItem.Label]</value>
	<value condition="Control.HasFocus(8865)">$INFO[Container(8865).ListItem.Label]</value>

	<!-- Shared Content -->
	<value condition="Control.HasFocus(56)">$INFO[Container(56).ListItem.Label]</value>

</variable>
<variable name="Deck_Label_Title_2">
	<!-- XBMC -->
        <value condition="Control.HasFocus(11000) + Skin.HasSetting(XBMC)">$INFO[Container(11000).ListItem.Label2]</value>
        <value condition="Control.HasFocus(11001) + Skin.HasSetting(XBMC)">$INFO[Container(11001).ListItem.Label2]</value>
        <value condition="Control.HasFocus(11010) + Skin.HasSetting(XBMC)">$INFO[Container(11010).ListItem.Label2]</value>

	<!-- Recently Added -->
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(episode)">$INFO[Container(11000).ListItem.Title][COLOR=mainblue] / [/COLOR]$INFO[Container(11000).ListItem(0).Duration]min</value>
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(movie)">$INFO[Container(11000).ListItem.Year][COLOR=mainblue] / [/COLOR]$INFO[Container(11000).ListItem(0).Duration]min</value>
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(album)">$INFO[Container(11000).ListItem.Album]</value>
	<value condition="Control.HasFocus(11000) + Container(11000).ListItem.Type(photo)">$INFO[Container(11000).ListItem.Date]</value>

	<!-- On Deck -->
	<value condition="Control.HasFocus(11001) + Container(11001).ListItem.Type(episode)">$INFO[Container(11001).ListItem(0).Title][COLOR=mainblue] / [/COLOR]$INFO[Container(11001).ListItem(0).Duration]min</value>
	<value condition="Control.HasFocus(11001) + Container(11001).ListItem.Type(movie)">$INFO[Container(11001).ListItem(0).Year][COLOR=mainblue] / [/COLOR]$INFO[Container(11001).ListItem(0).Duration]min</value>

	<!-- Queue -->
	<value condition="Control.HasFocus(11003)">$INFO[Container(11003).ListItem.Property(sourceTitle)]</value>

	<!-- PlayQueue Video -->
	<value condition="Control.HasFocus(11005) + Container(11005).ListItem.Type(episode)">$INFO[Container(11005).ListItem.Title][COLOR=mainblue] / [/COLOR]$INFO[Container(11005).ListItem(0).Duration]min</value>
	<value condition="Control.HasFocus(11005) + Container(11005).ListItem.Type(movie)">$INFO[Container(11005).ListItem.Year][COLOR=mainblue] / [/COLOR]$INFO[Container(11005).ListItem(0).Duration]min</value>

	<!-- PlayQueue Music -->
	<!--<value condition="Control.HasFocus(11006)">$INFO[Container(11006).ListItem.Album][COLOR=mainblue] / [/COLOR]$INFO[Container(11006).ListItem.Label]</value>-->
	<value condition="Control.HasFocus(11006)">$INFO[Container(11006).ListItem.Album]</value>

	<!-- PlayQueue Photo -->
	<value condition="Control.HasFocus(11007)">$INFO[Container(11007).ListItem.Date]</value>

	<!-- Shared Content -->
	<value condition="Control.HasFocus(56)">$INFO[ListItem.Property(sourceTitle)]</value>
</variable>

<!-- DECK INFORMATION (MORE) -->
<include name="Deck_Information_More">
	<control type="group">
		<visible>!Skin.HasSetting(deck_moreinfo)</visible>
		<posy>30</posy>

		<!-- Content Rating -->
		<control type="image">
			<posx>0</posx>
			<posy>11</posy>
			<width>80</width>
			<height>70</height>
			<aspectratio>keep</aspectratio>
			<colordiffuse>88FFFFFF</colordiffuse>
			<texture>$VAR[Deck_Label_ContentRating]</texture>
			<align>center</align>
			<aligny>center</aligny>
		</control>

		<!-- Star Rating -->
		<control type="image">
			<posy>95</posy>
			<width>80</width>
			<height>20</height>
			<aspectratio>keep</aspectratio>
			<colordiffuse>mainblue</colordiffuse>
			<!--<colordiffuse>88FFFFFF</colordiffuse>-->
			<texture>$VAR[Deck_Label_StarRating]</texture>
			<align>center</align>
		</control>
		<!-- Plot -->
		<control type="textbox">
                        <posx>90</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <height>90</height>
                        <align>justify</align>
                        <label>$VAR[Deck_Label_Plot]</label>
                        <font>Font_Bartowski_Movies_Plot</font>
                        <textcolor>ffffffff</textcolor>
                        <autoscroll time="3000" delay="5000" repeat="5000">Skin.HasSetting(autoscroll)</autoscroll>
                </control>

		<!-- Animation Test -->
		<!--<control type="textbox">
                        <posx>90</posx>
                        <posy>0</posy>
                        <width>600</width>
                        <height>90</height>
                        <label>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</label>
                        <font>Font_Bartowski_Movies_Plot</font>
                        <textcolor>ffffffff</textcolor>
			<visible>Control.hasFocus(300)</visible>
                </control>-->

		<!-- Studio Logo -->
		<!--<control type="image">
			<posy>10</posy>
			<posx>720</posx>
			<width>110</width>
			<height>110</height>
			<colordiffuse>88FFFFFF</colordiffuse>
			<texture>$VAR[Deck_Label_Studio]</texture>
			<aspectratio>keep</aspectratio>
			<align>center</align>
			<aligny>center</aligny>
		</control>-->
		<!-- Mediaflags -->
		<control type="grouplist">
			<posx>100</posx>
			<posy>100</posy>
			<width>600</width>
			<height>20</height>
			<orientation>horizontal</orientation>
			<itemgap>30</itemgap>
			<control type="image">
				<height>16</height>
				<width min="29" max="100">auto</width>
				<texture>$VAR[Deck_Label_VideoResolution]</texture>
				<aspectratio>keep</aspectratio>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
			<control type="image">
				<height>16</height>
				<width min="29" max="100">auto</width>
				<texture>$VAR[Deck_Label_AudioCodec]</texture>
				<aspectratio>keep</aspectratio>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
			<control type="image">
				<height>16</height>
				<width min="29" max="100">auto</width>
				<texture>$VAR[Deck_Label_AudioChannels]</texture>
				<aspectratio>keep</aspectratio>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
			<control type="image">
				<height>16</height>
				<width min="29" max="100">auto</width>
				<texture>$VAR[Deck_Label_AspectRatio]</texture>
				<aspectratio>keep</aspectratio>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
			<control type="image">
				<height>16</height>
				<width min="29" max="100">auto</width>
				<texture>$VAR[Deck_Label_VideoCodec]</texture>
				<aspectratio>keep</aspectratio>
				<colordiffuse>FFCCCCCC</colordiffuse>
			</control>
		</control>

	</control>
</include>
<variable name="Deck_Label_Plot">
	<!-- XBMC -->
        <value condition="Control.HasFocus(11000) + Skin.HasSetting(XBMC)">$INFO[Container(11000).ListItem.Property(Plot)]</value>
        <value condition="Control.HasFocus(11001) + Skin.HasSetting(XBMC)">$INFO[Container(11001).ListItem.Property(Plot)]</value>
        <value condition="Control.HasFocus(11010) + Skin.HasSetting(XBMC)">$INFO[Container(11001).ListItem.Property(Plot)]</value>

	<!-- Recently Added -->
	<value condition="Control.HasFocus(11000)">$INFO[Container(11000).ListItem.Plot]</value>

	<!-- On Deck -->
	<value condition="Control.HasFocus(11001)">$INFO[Container(11001).ListItem.Plot]</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).ListItem.Plot]</value>

</variable>
<variable name="Deck_Label_ContentRating">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000) + !isEmpty(Container(11000).ListItem.Art(mediaTag::contentRating))">$INFO[Container(11000).ListItem.Art(mediaTag::contentRating)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000) + !isEmpty(Container(11000).ListItem.Property(Mpaa))">mediaflags/content/$INFO[Container(11000).ListItem.Property(Mpaa)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001) + !isEmpty(Container(11001).ListItem.Art(mediaTag::contentRating))">$INFO[Container(11001).ListItem.Art(mediaTag::contentRating)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001) + !isEmpty(Container(11001).ListItem.Property(Mpaa))">mediaflags/content/$INFO[Container(11001).ListItem.Property(Mpaa)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005) + !isEmpty(Container(11005).ListItem.Art(mediaTag::contentRating))">$INFO[Container(11005).ListItem.Art(mediaTag::contentRating)]</value>

	<!-- Fallback -->
	<value condition="!Control.HasFocus(300)">DefaultVideoCover.png</value>
</variable>
<variable name="Deck_Label_StarRating">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).ListItem.StarRating]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">Rating $INFO[Container(11000).Listitem.Property(StarRating)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).ListItem.StarRating]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">Rating $INFO[Container(11001).Listitem.Property(StarRating)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).ListItem.StarRating]</value>
</variable>
<variable name="Deck_Label_Studio">
	<!-- Recently Added -->
	<value condition="Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::studio)]</value>

	<!-- On Deck -->
	<value condition="Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::studio)]</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::studio)]</value>
</variable>

<!-- Mediaflags -->
<variable name="Deck_Label_VideoResolution">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::videoResolution)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">mediaflags/resolution/$INFO[Container(11000).Listitem.Property(VideoResolution)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::videoResolution)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">mediaflags/resolution/$INFO[Container(11001).Listitem.Property(VideoResolution)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::videoResolution)]</value>
</variable>
<variable name="Deck_Label_AudioCodec">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::audioCodec)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">mediaflags/acodec/$INFO[Container(11000).Listitem.Property(AudioCodec)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::audioCodec)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">mediaflags/acodec/$INFO[Container(11001).Listitem.Property(AudioCodec)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::audioCodec)]</value>
</variable>
<variable name="Deck_Label_AudioChannels">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::audioChannels)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">mediaflags/channels/$INFO[Container(11000).Listitem.Property(AudioChannels)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::audioChannels)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">mediaflags/channels/$INFO[Container(11001).Listitem.Property(AudioChannels)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::audioChannels)]</value>
</variable>
<variable name="Deck_Label_AspectRatio">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::aspectRatio)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">mediaflags/ratio/$INFO[Container(11000).Listitem.Property(VideoAspect)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::aspectRatio)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">mediaflags/ratio/$INFO[Container(11001).Listitem.Property(VideoAspect)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::aspectRatio)]</value>
</variable>
<variable name="Deck_Label_VideoCodec">
	<!-- Recently Added -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11000)">$INFO[Container(11000).Listitem.Art(mediaTag::videoCodec)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11000)">mediaflags/vcodec/$INFO[Container(11000).Listitem.Property(VideoCodec)].png</value>

	<!-- On Deck -->
	<value condition="!Skin.HasSetting(XBMC) + Control.HasFocus(11001)">$INFO[Container(11001).Listitem.Art(mediaTag::videoCodec)]</value>
	<value condition="Skin.HasSetting(XBMC) + Control.HasFocus(11001)">mediaflags/vcodec/$INFO[Container(11001).Listitem.Property(VideoCodec)].png</value>

	<!-- Play Queue (Video) -->
	<value condition="Control.HasFocus(11005)">$INFO[Container(11005).Listitem.Art(mediaTag::videoCodec)]</value>
</variable>


<!-- Deck Layout -->
<include name="Deck_Layout">

		<!-- DECK LAYOUT (XBMC) -->
		<control type="group">
			<visible>Skin.HasSetting(XBMC)</visible>

			<!-- Cover -->
			<control type="image">
				<width>110</width>
				<height>170</height>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<texture diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.Icon]</texture>
				<visible>StringCompare(ListItem.Property(Type),Cover)</visible>
			</control>
			<control type="image">
				<posy>145</posy>
				<width>110</width>
				<height>25</height>
				<texture border="10">base-rounded.png</texture>
				<colordiffuse>AA000000</colordiffuse>
	                        <visible>StringCompare(ListItem.Property(Type2),Cover)</visible>
			</control>
	                <control type="label">
	                        <include>Deck_Label_Nowrap</include>
	                        <label>$INFO[ListItem.Label]</label>
	                        <visible>StringCompare(ListItem.Property(Type2),Cover)</visible>
	                </control>
                
			<!-- Square -->
			<control type="image">
				<width>110</width>
				<height>110</height>
				<aspectratio scalediffuse="false" align="center">scale</aspectratio>
				<texture diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.Icon]</texture>
				<visible>StringCompare(ListItem.Property(Type),Square)</visible>
			</control>
	                <control type="label">
	                        <label>$INFO[ListItem.Label]</label>
	                        <include>Deck_Label_Wrap</include>
	                        <visible>StringCompare(ListItem.Property(Type2),Square)</visible>
	                </control>

			<!-- Next Aired -->
			<control type="group">
				<visible>!isEmpty(ListItem.Property(Airtime))</visible>

				<control type="image">
					<posy>145</posy>
					<width>110</width>
					<height>25</height>
					<texture border="10">base-rounded.png</texture>
					<colordiffuse>AA000000</colordiffuse>
				</control>
				<control type="label">
					<include>Deck_Label_Nowrap</include>
					<label>$INFO[ListItem.Property(Airtime)]</label>
				</control>
			</control>

	                <!-- TV / Episode Overlay -->
	                <control type="image">
	                        <posy>145</posy>
	                        <width>110</width>
	                        <height>25</height>
	                        <texture border="10">base-rounded.png</texture>
	                        <colordiffuse>AA000000</colordiffuse>
	                        <visible>!isEmpty(ListItem.Property(Number))</visible>
        	        </control>
	                <control type="label">
	                        <include>Deck_Label_Nowrap</include>
	                        <label>$INFO[ListItem.Property(Number)]</label>
	                        <visible>!isEmpty(ListItem.Property(Number))</visible>
	                </control>


		</control>

		<!-- DECK LAYOUT (PLEX) -->
		<control type="group">
			<visible>!Skin.HasSetting(XBMC)</visible>
		
			<!-- TvShow / Season / Episode -->
			<control type="group">
				<visible>ListItem.Type(tvshow) | ListItem.Type(season) | ListItem.Type(episode)</visible>

				<!-- TV Show -->
				<control type="image">
					<width>110</width>
					<height>170</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture fallback="default-poster-big.png" diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.GrandparentThumb]</texture>
					<visible>!isEmpty(ListItem.GrandparentThumb)</visible>
					<include>Deck_Visible_Full</include>
				</control>

				<!-- Tv Episode -->
				<control type="image">
					<width>110</width>
					<height>170</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture fallback="default-poster-big.png" diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.Icon]</texture>
					<visible>isEmpty(ListItem.GrandparentThumb)</visible>
					<include>Deck_Visible_Full</include>
				</control>

				<!-- TV Default -->
				<control type="image">
					<width>110</width>
					<height>145</height>
					<include>Default_Icon</include>
					<include>Deck_Visible_Full</include>
					<visible>isEmpty(ListItem.GrandparentThumb) + isEmpty(ListItem.Icon)</visible>
				</control>
			</control>

			<!-- Other -->
			<control type="group">
				<visible>![ ListItem.Type(tvshow) | ListItem.Type(season) | ListItem.Type(episode) ]</visible>
				<!-- Square -->
				<control type="image">
					<width>110</width>
					<height>110</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.Icon]</texture>
					<include>Deck_Visible_Half</include>
				</control>
				<control type="image">
					<width>110</width>
					<height>110</height>
					<include>Default_Icon</include>
					<include>Deck_Visible_Half</include>
					<visible>isEmpty(ListItem.Icon)</visible>
				</control>

				<!-- Poster -->
				<control type="image">
					<width>110</width>
					<height>170</height>
					<aspectratio scalediffuse="false" align="center">scale</aspectratio>
					<texture diffuse="posterMaskSmall.png" background="true">$INFO[ListItem.Icon]</texture>
					<include>Deck_Visible_Full</include>
				</control>
				<control type="image">
					<width>110</width>
					<height>170</height>
					<include>Default_Icon</include>
					<include>Deck_Visible_Full</include>
					<visible>isEmpty(ListItem.Icon)</visible>
				</control>

			</control>

		<!-- Cover/Thumb Overlay -->
		<control type="image">
			<posy>145</posy>
			<width>110</width>
			<height>25</height>
			<texture border="10">base-rounded.png</texture>
			<colordiffuse>AA000000</colordiffuse>
			<include>Deck_Visible_Full</include>
			<!-- No Movie Overlay -->
			<visible>!ListItem.Type(movie)</visible>
		</control>
		<control type="image">
			<posy>110</posy>
			<width>110</width>
			<height>60</height>
			<texture border="10">base-rounded.png</texture>
			<colordiffuse>AA000000</colordiffuse>
			<include>Deck_Visible_Half</include>
		</control>

		<!-- Labels -->
		<control type="label">
			<include>Deck_Label_Nowrap</include>
			<label>S$INFO[ListItem.Season] [COLOR=mainblue]/[/COLOR] E$INFO[ListItem.Episode]</label>
			<visible>ListItem.Type(episode)</visible>
		</control>

		<control type="group">
			<visible>![ListItem.Type(episode) | ListItem.Type(movie)]</visible>
			<control type="label">
				<include>Deck_Label_Wrap</include>
				<include>Deck_Visible_Half</include>
				<label>$INFO[ListItem.Label]</label>
			</control>
			<control type="label">
				<include>Deck_Label_Nowrap</include>
				<include>Deck_Visible_Full</include>
				<label>$INFO[ListItem.Label]</label>
			</control>
		</control>
	</control>
</include>

<!-- Deck Visibility -->
<include name="Deck_Visible_Half">
	<visible>Control.isVisible(11006) | Control.isVisible(11007) | ListItem.Type(photo) | ListItem.Type(album) | ListItem.Type(song) | ListItem.Type(channel) | ListItem.Type(channels) | ListItem.Type(clip) | Skin.HasSetting(mysharedcontent_helper) | SubString(ListItem.Property(Type),Square)</visible>
</include>

<include name="Deck_Visible_Full">
	<visible>ListItem.Type(movie) | ListItem.Type(tvshow) | ListItem.Type(episode) | ListItem.Type(season) | ListItem.Type(video) | SubString(ListItem.Property(Type),Cover)</visible>
</include>

<!-- Deck Name -->
<include name="Deck_Name">
	<visible>!Skin.HasSetting(Deck_NoLabels)</visible>
	<!--<posy>-25</posy>-->
	<posy>-30</posy>
	<width>200</width>
	<!--<font>MediumSmallTitleFont2</font>-->
	<!--<font>Font_Bartowski_Main_Preplay</font>-->
	<font>Font_Bartowski_Movies_Plot</font>

	<include condition="!Skin.HasSetting(HomeNoAccentDeck)">HomeNoAccent</include>
	<textcolor>ffffffff</textcolor>
	<shadowcolor>FF222222</shadowcolor>
	<align>right</align>

	<!-- Vertical Home -->
	<!-- Animation ON -->
	<animation effect="slide" end="420,0" time="800" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>
	<animation effect="slide" end="840,0" time="800" tween="back" easing="inout" condition="!Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>
	<!-- Animation OFF -->
	<animation effect="slide" end="420,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>
	<animation effect="slide" end="840,0" time="0" condition="Skin.HasSetting(Deck_NoAnimation) + !Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short) + ControlGroup(5000).HasFocus">conditional</animation>

	<animation effect="slide" end="530,0" condition="!Skin.HasSetting(Home_Horizontal) + !Skin.HasSetting(Deck_Short)">Conditional</animation>
	<animation effect="slide" end="110,0" condition="!Skin.HasSetting(Home_Horizontal) + Skin.HasSetting(Deck_Short)">Conditional</animation>

	<!-- Horizontal Home -->
	<animation effect="slide" end="950,195" condition="Skin.HasSetting(Home_Horizontal)">Conditional</animation>
</include>

<!-- Deck Content -->
<include name="Deck_Content">
	<!-- Vertical Navigation -->
	<onleft condition="!Skin.HasSetting(Home_Horizontal)">300</onleft>

	<!-- Horizontal Navigation -->
	<ondown condition="Skin.HasSetting(Home_Horizontal)">300</ondown>

	<width>980</width>
	<height>170</height>
	<orientation>horizontal</orientation>
	<itemlayout width="140" height="330">
		<include>Deck_Layout</include>
	</itemlayout>
	<focusedlayout width="140" height="330">
		<include>Deck_Layout</include>
	</focusedlayout>
</include>

<!-- Deck Label NoWrap -->
<include name="Deck_Label_Nowrap">
	<posx>55</posx>
	<posy>145</posy>
	<width>110</width>
	<height>25</height>
	<align>center</align>
	<aligny>center</aligny>
	<scroll>false</scroll>
	<font>SearchResultSmaller</font>
	<textcolor>FFCCCCCC</textcolor>
	<wrapmultiline>false</wrapmultiline>
</include>

<!-- Deck Label Wrap -->
<include name="Deck_Label_Wrap">
	<posx>55</posx>
	<posy>120</posy>
	<width>110</width>
	<height>40</height>
	<align>center</align>
	<aligny>center</aligny>
	<scroll>false</scroll>
	<font>SearchResultSmaller</font>
	<textcolor>FFCCCCCC</textcolor>
	<wrapmultiline>true</wrapmultiline>
</include>

<include name="Deck_Placeholder">
	<control type="image">
		<posx>-1</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>0</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>
 	
	<control type="image">
		<posx>139</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>140</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>

	<control type="image">
		<posx>279</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>280</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>

	<control type="image">
		<posx>419</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>420</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>

	<control type="image">
		<posx>559</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>560</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>

	<control type="image">
		<posx>699</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>700</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>

	<control type="image">
		<posx>839</posx>
		<posy>-1</posy>
		<width>112</width>
		<height>172</height>
		<aspectratio scalediffuse="false" align="center">stretch</aspectratio>
		<texture background="true">frameOrange.png</texture>
		<colordiffuse>77AAAAAA</colordiffuse>
	</control>
	<control type="image">
		<posx>840</posx>
		<width>110</width>
		<height>170</height>
		<aspectratio scalediffuse="false" align="center">scale</aspectratio>
		<texture background="true" border="5">base-rounded.png</texture>
		<colordiffuse>77000000</colordiffuse>
	</control>
</include>
</includes>

